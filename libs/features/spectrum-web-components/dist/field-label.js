/* eslint-disable */
/* Generated by Milo */

import{html as c,nothing as g,SizedMixin as h,SpectrumElement as v}from"./base.js";import{property as s,query as x}from"./base.js";import{randomID as k}from"./shared.js";import"./icons-ui.js";import y from"./icons/asterisk.js";import{conditionAttributeWithId as z,conditionAttributeWithoutId as E}from"./base.js";import{ElementResolutionController as w,elementResolverUpdatedSymbol as T}from"./reactive-controllers.js";import{css as p}from"./base.js";var b=p`
    :host,:host{--spectrum-field-label-min-height:var(--spectrum-component-height-75);--spectrum-field-label-top-to-text:var(--spectrum-component-top-to-text-75);--spectrum-field-label-bottom-to-text:var(--spectrum-component-bottom-to-text-75);--spectrum-field-label-font-size:var(--spectrum-font-size-75);--spectrum-field-label-side-margin-block-start:var(--spectrum-field-label-top-margin-medium);--spectrum-field-label-side-padding-right:var(--spectrum-spacing-200);--spectrum-field-label-text-to-asterisk:var(--spectrum-field-label-text-to-asterisk-medium)}:host([size=s]){--spectrum-field-label-min-height:var(--spectrum-component-height-75);--spectrum-field-label-top-to-text:var(--spectrum-component-top-to-text-75);--spectrum-field-label-bottom-to-text:var(--spectrum-component-bottom-to-text-75);--spectrum-field-label-font-size:var(--spectrum-font-size-75);--spectrum-field-label-side-margin-block-start:var(--spectrum-field-label-top-margin-small);--spectrum-field-label-side-padding-right:var(--spectrum-spacing-100);--spectrum-field-label-text-to-asterisk:var(--spectrum-field-label-text-to-asterisk-small)}:host([size=l]){--spectrum-field-label-min-height:var(--spectrum-component-height-100);--spectrum-field-label-top-to-text:var(--spectrum-component-top-to-text-100);--spectrum-field-label-bottom-to-text:var(--spectrum-component-bottom-to-text-100);--spectrum-field-label-font-size:var(--spectrum-font-size-100);--spectrum-field-label-side-margin-block-start:var(--spectrum-field-label-top-margin-large);--spectrum-field-label-side-padding-right:var(--spectrum-spacing-200);--spectrum-field-label-text-to-asterisk:var(--spectrum-field-label-text-to-asterisk-large)}:host([size=xl]){--spectrum-field-label-min-height:var(--spectrum-component-height-200);--spectrum-field-label-top-to-text:var(--spectrum-component-top-to-text-200);--spectrum-field-label-bottom-to-text:var(--spectrum-component-bottom-to-text-200);--spectrum-field-label-font-size:var(--spectrum-font-size-200);--spectrum-field-label-side-margin-block-start:var(--spectrum-field-label-top-margin-extra-large);--spectrum-field-label-side-padding-right:var(--spectrum-spacing-200);--spectrum-field-label-text-to-asterisk:var(--spectrum-field-label-text-to-asterisk-extra-large)}:host{box-sizing:border-box;min-block-size:var(--mod-fieldlabel-min-height,var(--spectrum-field-label-min-height));padding-block:var(--mod-fieldlabel-padding-block,var(--mod-field-label-top-to-text,var(--spectrum-field-label-top-to-text))var(--mod-field-label-bottom-to-text,var(--spectrum-field-label-bottom-to-text)));padding-inline:0;padding-inline:var(--mod-fieldlabel-padding-inline,0);margin-block:0;margin-block:var(--mod-fieldlabel-margin-block,var(--mod-fieldlabel-margin-block-start,0)var(--mod-fieldlabel-margin-block-end,0));margin-inline:0;margin-inline:var(--mod-fieldlabel-margin-inline,var(--mod-fieldlabel-margin-inline-start,0)var(--mod-fieldlabel-margin-inline-end,0));font-size:var(--mod-fieldlabel-font-size,var(--spectrum-field-label-font-size));font-weight:var(--mod-fieldlabel-font-weight,var(--spectrum-regular-font-weight));line-height:var(--mod-fieldlabel-line-height,var(--spectrum-line-height-100));-webkit-font-smoothing:subpixel-antialiased;-moz-osx-font-smoothing:auto;color:var(--highcontrast-field-label-content-color,var(--mod-fieldlabel-color,var(--spectrum-neutral-subdued-content-color-default)));display:block}:host(:lang(ja)),:host(:lang(ko)),:host(:lang(zh)){--mod-fieldlabel-line-height:var(--mod-fieldlabel-line-height-cjk,var(--spectrum-cjk-line-height-100))}:host([disabled]){--mod-fieldlabel-color:var(--mod-disabled-content-color,var(--spectrum-disabled-content-color))}.required-icon{color:inherit;margin-block:0;margin-inline:var(--mod-field-label-text-to-asterisk,var(--spectrum-field-label-text-to-asterisk))0;vertical-align:initial;vertical-align:var(--mod-field-label-asterisk-vertical-align,baseline)}:host([side-aligned=start]),:host([side-aligned=end]){vertical-align:top;margin-block-start:var(--mod-fieldlabel-side-margin-block-start,var(--spectrum-field-label-side-margin-block-start));margin-block-end:0;margin-inline-end:var(--mod-fieldlabel-side-padding-right,var(--spectrum-field-label-side-padding-right));display:inline-block}:host([side-aligned=end]){text-align:end}@media (forced-colors:active){:host([disabled]){--highcontrast-field-label-content-color:GrayText}}label{display:inline-block}
`,m=b;var f=Object.defineProperty,u=Object.getOwnPropertyDescriptor,o=(n,e,l,t)=>{for(var i=t>1?void 0:t?u(e,l):e,a=n.length-1,d;a>=0;a--)(d=n[a])&&(i=(t?d(e,l,i):d(i))||i);return t&&i&&f(e,l,i),i},r=class extends h(v,{noDefaultSize:!0}){constructor(){super(...arguments),this.disabled=!1,this.id="",this.for="",this.required=!1,this.resolvedElement=new w(this)}static get styles(){return[m,y]}handleClick(e){if(!this.target||this.disabled||e.defaultPrevented)return;this.target.focus();let l=this.getRootNode(),t=this.target,i=t.getRootNode(),a=i.host;i===l&&t.forceFocusVisible?t.forceFocusVisible():a&&a.forceFocusVisible&&a.forceFocusVisible()}applyTargetLabel(e){if(this.target=e||this.target,this.target){let l=this.target.applyFocusElementLabel,t=this.target.focusElement||this.target,i=t.getRootNode();typeof l<"u"?l(this.labelText,this):i===this.getRootNode()?(e?z:E)(t,"aria-labelledby",[this.id]):e?t.setAttribute("aria-label",this.labelText):t.removeAttribute("aria-label")}}async manageTarget(){this.applyTargetLabel();let e=this.resolvedElement.element;if(!e){this.target=e;return}e.localName.search("-")>0&&await customElements.whenDefined(e.localName),typeof e.updateComplete<"u"&&await e.updateComplete,this.applyTargetLabel(e)}get labelText(){let e=this.slotEl.assignedNodes({flatten:!0});return e.length?e.map(l=>(l.textContent||"").trim()).join(" "):""}render(){return c`
            <label>
                <slot></slot>
                ${this.required?c`
                          <sp-icon-asterisk100
                              class="required-icon spectrum-UIIcon-Asterisk100"
                          ></sp-icon-asterisk100>
                      `:g}
            </label>
        `}firstUpdated(e){super.firstUpdated(e),this.addEventListener("click",this.handleClick)}willUpdate(e){this.hasAttribute("id")||this.setAttribute("id",`${this.tagName.toLowerCase()}-${k()}`),e.has("for")&&(this.resolvedElement.selector=this.for?`#${this.for}`:""),(e.has("id")||e.has(T))&&this.manageTarget()}};o([s({type:Boolean,reflect:!0})],r.prototype,"disabled",2),o([s({type:String})],r.prototype,"id",2),o([s({type:String})],r.prototype,"for",2),o([s({type:Boolean,reflect:!0})],r.prototype,"required",2),o([x("slot")],r.prototype,"slotEl",2),o([s({type:String,reflect:!0,attribute:"side-aligned"})],r.prototype,"sideAligned",2);import{defineElement as A}from"./base.js";A("sp-field-label",r);

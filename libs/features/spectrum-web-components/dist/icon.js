/* eslint-disable */
/* Generated by Milo */

import{html as f,SpectrumElement as x}from"/libs/features/spectrum-web-components/dist/base.js";import{property as u}from"/libs/features/spectrum-web-components/dist/base.js";import{css as z}from"/libs/features/spectrum-web-components/dist/base.js";var w=z`
:host{fill:currentColor;color:var(--mod-icon-color,inherit);display:inline-block;pointer-events:none}:host(:not(:root)){overflow:hidden}@media (forced-colors:active){:host{forced-color-adjust:auto}}:host{--spectrum-icon-size-s:var(
--spectrum-alias-workflow-icon-size-s,var(--spectrum-global-dimension-size-200)
);--spectrum-icon-size-m:var(
--spectrum-alias-workflow-icon-size-m,var(--spectrum-global-dimension-size-225)
);--spectrum-icon-size-l:var(--spectrum-alias-workflow-icon-size-l);--spectrum-icon-size-xl:var(
--spectrum-alias-workflow-icon-size-xl,var(--spectrum-global-dimension-size-275)
);--spectrum-icon-size-xxl:var(--spectrum-global-dimension-size-400)}:host([size=s]){height:var(--spectrum-icon-size-s);width:var(--spectrum-icon-size-s)}:host([size=m]){height:var(--spectrum-icon-size-m);width:var(--spectrum-icon-size-m)}:host([size=l]){height:var(--spectrum-icon-size-l);width:var(--spectrum-icon-size-l)}:host([size=xl]){height:var(--spectrum-icon-size-xl);width:var(--spectrum-icon-size-xl)}:host([size=xxl]){height:var(--spectrum-icon-size-xxl);width:var(--spectrum-icon-size-xxl)}:host{--spectrum-icon-size-xxs:var(
--spectrum-alias-workflow-icon-size-xxs,var(--spectrum-global-dimension-size-150)
);--spectrum-icon-size-xs:var(
--spectrum-alias-workflow-icon-size-xs,var(--spectrum-global-dimension-size-175)
);height:var(
--spectrum-icon-tshirt-size-height,var(
--spectrum-alias-workflow-icon-size,var(--spectrum-global-dimension-size-225)
)
);width:var(
--spectrum-icon-tshirt-size-width,var(
--spectrum-alias-workflow-icon-size,var(--spectrum-global-dimension-size-225)
)
)}:host([size=xxs]){height:var(--spectrum-icon-size-xxs);width:var(--spectrum-icon-size-xxs)}:host([size=xs]){height:var(--spectrum-icon-size-xs);width:var(--spectrum-icon-size-xs)}#container{height:100%}::slotted(*),img,svg{color:inherit;height:100%;vertical-align:top;width:100%}@media (forced-colors:active){::slotted(*),img,svg{forced-color-adjust:auto}}
`,m=w;var g=Object.defineProperty,b=Object.getOwnPropertyDescriptor,d=(r,e,t,i)=>{for(var s=i>1?void 0:i?b(e,t):e,o=r.length-1,n;o>=0;o--)(n=r[o])&&(s=(i?n(e,t,s):n(s))||s);return i&&s&&g(e,t,s),s},c=class extends x{constructor(){super(...arguments),this.label=""}static get styles(){return[m]}update(e){e.has("label")&&(this.label?this.removeAttribute("aria-hidden"):this.setAttribute("aria-hidden","true")),super.update(e)}render(){return f`
            <slot></slot>
        `}};d([u()],c.prototype,"label",2),d([u({reflect:!0})],c.prototype,"size",2);import{html as h}from"/libs/features/spectrum-web-components/dist/base.js";import{property as v,query as C}from"/libs/features/spectrum-web-components/dist/base.js";import{ifDefined as k}from"/libs/features/spectrum-web-components/dist/base.js";var p=class r{constructor(){this.iconsetMap=new Map}static getInstance(){return r.instance||(r.instance=new r),r.instance}addIconset(e,t){this.iconsetMap.set(e,t);let i=new CustomEvent("sp-iconset-added",{bubbles:!0,composed:!0,detail:{name:e,iconset:t}});setTimeout(()=>window.dispatchEvent(i),0)}removeIconset(e){this.iconsetMap.delete(e);let t=new CustomEvent("sp-iconset-removed",{bubbles:!0,composed:!0,detail:{name:e}});setTimeout(()=>window.dispatchEvent(t),0)}getIconset(e){return this.iconsetMap.get(e)}};var I=Object.defineProperty,y=Object.getOwnPropertyDescriptor,l=(r,e,t,i)=>{for(var s=i>1?void 0:i?y(e,t):e,o=r.length-1,n;o>=0;o--)(n=r[o])&&(s=(i?n(e,t,s):n(s))||s);return i&&s&&I(e,t,s),s},a=class extends c{constructor(){super(...arguments),this.iconsetListener=e=>{if(!this.name)return;let t=this.parseIcon(this.name);e.detail.name===t.iconset&&(this.updateIconPromise=this.updateIcon())}}connectedCallback(){super.connectedCallback(),window.addEventListener("sp-iconset-added",this.iconsetListener)}disconnectedCallback(){super.disconnectedCallback(),window.removeEventListener("sp-iconset-added",this.iconsetListener)}firstUpdated(){this.updateIconPromise=this.updateIcon()}attributeChangedCallback(e,t,i){super.attributeChangedCallback(e,t,i),this.updateIconPromise=this.updateIcon()}announceIconImageSrcError(){this.dispatchEvent(new Event("error",{cancelable:!1,bubbles:!1,composed:!1}))}render(){return this.name?h`
                <div id="container"></div>
            `:this.src?h`
                <img
                    src="${this.src}"
                    alt=${k(this.label)}
                    @error=${this.announceIconImageSrcError}
                />
            `:super.render()}async updateIcon(){if(this.updateIconPromise&&await this.updateIconPromise,!this.name)return Promise.resolve();let e=this.parseIcon(this.name),t=p.getInstance().getIconset(e.iconset);return!t||!this.iconContainer?Promise.resolve():(this.iconContainer.innerHTML="",t.applyIconToElement(this.iconContainer,e.icon,this.size||"",this.label?this.label:""))}parseIcon(e){let t=e.split(":"),i="default",s=e;return t.length>1&&(i=t[0],s=t[1]),{iconset:i,icon:s}}async getUpdateComplete(){let e=await super.getUpdateComplete();return await this.updateIconPromise,e}};l([v()],a.prototype,"src",2),l([v()],a.prototype,"name",2),l([C("#container")],a.prototype,"iconContainer",2);export*from"/libs/features/spectrum-web-components/dist/icons/checkmark.js";var H={};export{a as Icon,c as IconBase,H as default};

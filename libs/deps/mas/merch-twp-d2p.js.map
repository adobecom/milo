{
  "version": 3,
  "sources": ["../../features/mas/src/merch-twp-d2p.js", "../../features/mas/node_modules/@spectrum-web-components/reactive-controllers/src/MatchMedia.ts", "../../features/mas/src/merch-twp-d2p.css.js", "../../features/mas/src/media.js", "../../features/mas/src/constants.js", "../../features/mas/src/deeplink.js"],
  "sourcesContent": ["import { LitElement, html } from 'lit';\n\nimport { MatchMediaController } from '@spectrum-web-components/reactive-controllers/src/MatchMedia.js';\n\nimport { styles } from './merch-twp-d2p.css.js';\nimport { TABLET_DOWN } from './media.js';\nimport {\n    EVENT_MERCH_CARD_READY,\n    EVENT_MERCH_QUANTITY_SELECTOR_CHANGE,\n    EVENT_OFFER_SELECTED,\n    EVENT_MERCH_STORAGE_CHANGE,\n} from './constants.js';\nimport { parseState } from './deeplink.js';\n\nconst TAG_NAME = 'merch-twp-d2p';\nconst TAB_INDIVIDUALS = 'individuals';\nconst TAB_BUSINESS = 'business';\nconst TAB_EDUCATION = 'education';\n\nexport class MerchTwpD2P extends LitElement {\n    static styles = [styles];\n\n    static properties = {\n        individualsText: { type: String, attribute: 'individuals-text' },\n        businessText: { type: String, attribute: 'business-text' },\n        educationText: { type: String, attribute: 'education-text' },\n        continueText: { type: String, attribute: 'continue-text' },\n        ready: { type: Boolean },\n        step: { type: Number },\n        singleCard: { state: true },\n        selectedTab: { type: String, attribute: 'selected-tab', reflect: true },\n    };\n\n    selectedTab = this.preselectedTab();\n\n    #log;\n\n    #cardIcons;\n    #handleOfferSelected;\n    #mobileAndTablet = new MatchMediaController(this, TABLET_DOWN);\n\n    individualsText = 'Individuals';\n    businessText = 'Business';\n    educationText = 'Students and teachers';\n    continueText = 'Continue';\n    ready = false;\n\n    constructor() {\n        super();\n        this.step = 1;\n        this.#handleOfferSelected = this.handleOfferSelected.bind(this);\n        this.handleWhatsIncludedClick = this.handleWhatsIncludedClick.bind(this);\n    }\n\n    /** @type {Commerce.Log.Instance} */\n    get log() {\n        if (!this.#log) {\n            this.#log = document.head\n                .querySelector('wcms-commerce')\n                ?.Log.module('twp');\n        }\n        return this.#log;\n    }\n\n    get individualsTab() {\n        if (this.cciCards.length === 0) return html``;\n        return html`\n            <sp-tab value=\"${TAB_INDIVIDUALS}\" label=${this.individualsText}>\n                <sp-icon-user slot=\"icon\"></sp-icon-user>\n            </sp-tab>\n            <sp-tab-panel value=\"${TAB_INDIVIDUALS}\">\n                <div class=\"cards\">\n                    <slot name=\"individuals\"></slot>\n                    <slot name=\"cci-footer\"></slot>\n                </div>\n            </sp-tab-panel>\n        `;\n    }\n\n    get businessTab() {\n        if (this.cctCards.length === 0) return html``;\n        return html`\n            <sp-tab value=\"${TAB_BUSINESS}\" label=${this.businessText}>\n                <sp-icon-user-group slot=\"icon\"></sp-icon-user-group>\n            </sp-tab>\n            <sp-tab-panel value=\"${TAB_BUSINESS}\">\n                <div class=\"cards\">\n                    <slot name=\"business\"></slot>\n                    <slot name=\"cct-footer\"></slot>\n                </div>\n            </sp-tab-panel>\n        `;\n    }\n\n    get educationTab() {\n        if (this.cceCards.length === 0) return html``;\n        return html`\n            <sp-tab value=\"${TAB_EDUCATION}\" label=${this.educationText}>\n                <sp-icon-book slot=\"icon\"></sp-icon-book>\n            </sp-tab>\n            <sp-tab-panel value=\"${TAB_EDUCATION}\">\n            <div class=\"cards\">\n                <slot name=\"education\"></slot>\n                <slot name=\"cce-footer\"></slot>\n            </sp-tab-panel>\n        `;\n    }\n\n    preselectedTab() {\n        const params = new URLSearchParams(window.location.search);\n        const plan = params.get('plan');\n        if (\n            plan === TAB_INDIVIDUALS ||\n            plan === TAB_BUSINESS ||\n            plan === TAB_EDUCATION\n        ) {\n            return plan;\n        } else {\n            return TAB_INDIVIDUALS;\n        }\n    }\n\n    get selectedTabPanel() {\n        return this.shadowRoot.querySelector('sp-tab-panel[selected]');\n    }\n\n    get firstCardInSelectedTab() {\n        return this.selectedTabPanel\n            ?.querySelector('slot')\n            .assignedElements()[0]; // only cards\n    }\n\n    get tabs() {\n        if (this.cards.length === 1) return html``;\n        if (this.singleCard && this.step === 1) return html``;\n        return html`\n            <sp-tabs\n                emphasized\n                selected=\"${this.selectedTab}\"\n                @change=${this.tabChanged}\n            >\n                ${this.individualsTab} ${this.businessTab} ${this.educationTab}\n            </sp-tabs>\n        `;\n    }\n\n    async tabChanged(event) {\n        this.selectedTab = event.target.selected;\n        await event.target.updateComplete;\n        this.selectCard(this.firstCardInSelectedTab);\n    }\n\n    /** the footer is displayed only in the step 1 */\n    get singleCardFooter() {\n        if (this.step !== 1) return;\n        return html`\n            <slot name=\"cci-footer\"></slot>\n            <slot name=\"cct-footer\"></slot>\n            <slot name=\"cce-footer\"></slot>\n        `;\n    }\n\n    get desktopLayout() {\n        if (this.singleCard) {\n            /** single card is displayed in two cases:\n             *  1. step 2 with 3 cards in step 1.\n             *  Single card at step 1.\n             */\n            return html`<div class=\"desktop\" data-step=\"${this.step}\">\n                <div id=\"content\">\n                    <slot name=\"detail-xl\"></slot>\n                    ${this.tabs}\n                    <slot name=\"single-card\"></slot>\n                    ${this.singleCardFooter} ${this.backButton}\n                </div>\n                <aside>\n                    <slot name=\"panel\"></slot>\n                </aside>\n            </div>`;\n        }\n        return html`\n            <div class=\"desktop\" data-step=\"${this.step}\">\n                <div id=\"content\">\n                    <slot name=\"detail-xl\"></slot>\n                    ${this.tabs}\n                    <slot name=\"footer-link\"></slot>\n                </div>\n                ${this.cciCards.length < 3\n                    ? html`<aside>\n                          <slot name=\"panel\"></slot>\n                      </aside>`\n                    : ''}\n                ${this.continueButton}\n            </div>\n        `;\n    }\n\n    get showSubscriptionPanelInStep1() {\n        if (this.#mobileAndTablet.matches) return false;\n        return this.cciCards.length < 3;\n    }\n\n    get continueButton() {\n        if (this.showSubscriptionPanelInStep1) return html``;\n        return html`\n            <div id=\"continueButton\">\n                <sp-button\n                    variant=\"accent\"\n                    size=\"large\"\n                    @click=${this.handleContinue}\n                >\n                    ${this.continueText}\n                </sp-button>\n            </div>\n        `;\n    }\n\n    selectSingleCard(card) {\n        card.setAttribute('data-slot', card.getAttribute('slot'));\n        card.setAttribute('slot', 'single-card');\n        this.singleCard = card;\n    }\n\n    unSelectSingleCard() {\n        if (!this.singleCard) return;\n        this.singleCard.setAttribute(\n            'slot',\n            this.singleCard.getAttribute('data-slot'),\n        );\n        this.singleCard.removeAttribute('data-slot');\n        this.step = 1;\n        this.singleCard = undefined;\n    }\n\n    handleContinue() {\n        this.step = 2;\n        this.selectSingleCard(this.cardToSelect);\n        this.#cardIcons = [\n            ...this.singleCard.querySelectorAll('merch-icon'),\n        ].map((el) => el.cloneNode(true));\n    }\n\n    handleBack() {\n        this.unSelectSingleCard();\n    }\n\n    get cardToSelect() {\n        return (\n            this.selectedTabPanel?.card ??\n            this.querySelector('merch-card[aria-selected]')\n        );\n    }\n\n    // this.selectedTabPanel.card doesn't always exist, e.g. tab was switched but card wasn't selected yet\n    // this.singleCard ?? this.querySelector('merch-card[aria-selected]')\n    get selectedCard() {\n        return this.singleCard ?? this.selectedTabPanel.card;\n    }\n\n    get mobileStepTwo() {\n        if (!this.singleCard) return html``;\n        return html`\n            ${this.backButton} ${this.stepTwoCardIconsAndTitle}\n            <slot name=\"panel\"></slot>\n        `;\n    }\n\n    get stepTwoCardIconsAndTitle() {\n        if (!this.selectedCard) return;\n\n        return html`<div id=\"card-icons-title\">\n            ${this.#cardIcons}\n            <h3>${this.selectedCard.title}</h3>\n        </div>`;\n    }\n\n    get backButton() {\n        if (this.step !== 2) return html``;\n        return html`<sp-button\n            id=\"backButton\"\n            treatment=\"outline\"\n            variant=\"secondary\"\n            size=\"s\"\n            @click=${this.handleBack}\n        >\n            <sp-icon-chevron-double-left\n                slot=\"icon\"\n            ></<sp-icon-chevron-double-left></sp-icon-chevron-double-left\n            > Back</sp-button>`;\n    }\n\n    get mobileLayout() {\n        if (this.step === 1) {\n            return html`\n                <div class=\"mobile\" data-step=\"${this.step}\">\n                    <slot name=\"detail-xl\"></slot>\n                    <slot name=\"single-card\"></slot>\n                    ${this.tabs} ${this.continueButton}\n                </div>\n            `;\n        }\n        return html`\n            <div class=\"mobile\" data-step=\"${this.step}\">\n                <slot name=\"detail-xl\"></slot>\n                ${this.tabs}${this.mobileStepTwo}\n            </div>\n        `;\n    }\n\n    render() {\n        if (!this.ready) return html``;\n        return html`\n            <sp-theme  color=\"light\" scale=\"large\">\n                ${\n                    this.#mobileAndTablet.matches\n                        ? this.mobileLayout\n                        : this.desktopLayout\n                }\n                <slot name=\"merch-whats-included\"></slot>\n            </div>\n        `;\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n        this.style.setProperty('--mod-tabs-font-weight', 700);\n        this.addEventListener(EVENT_MERCH_CARD_READY, this.merchTwpReady);\n        this.subscriptionPanel.addEventListener(\n            EVENT_OFFER_SELECTED,\n            this.#handleOfferSelected,\n        );\n        this.addEventListener(\n            EVENT_MERCH_QUANTITY_SELECTOR_CHANGE,\n            this.handleQuantityChange,\n        );\n        this.whatsIncludedLink?.addEventListener(\n            'click',\n            this.handleWhatsIncludedClick\n        );\n        this.addEventListener(\n            EVENT_MERCH_STORAGE_CHANGE,\n            this.handleStorageChange,\n        );\n    }\n\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        this.removeEventListener(EVENT_MERCH_CARD_READY, this.merchTwpReady);\n        this.subscriptionPanel.removeEventListener(\n            EVENT_OFFER_SELECTED,\n            this.#handleOfferSelected,\n        );\n        this.whatsIncludedLink?.removeEventListener('click', this.handleWhatsIncludedClick);\n        this.removeEventListener(\n            EVENT_MERCH_STORAGE_CHANGE,\n            this.handleStorageChange,\n        );\n    }\n\n    handleOfferSelected(event) {\n        this.log.debug('Selecting plan type', event.target.planType);\n        this.selectedCard.selectMerchOffer(event.target.selectedOffer);\n    }\n\n    handleQuantityChange(event) {\n        if (!this.selectedTabPanel) return;\n        this.selectedCard.quantitySelect.defaultValue = event.detail.option;\n        this.requestUpdate();\n    }\n\n    get whatsIncludedLink() {\n        return this.querySelector('merch-card .merch-whats-included');\n    }\n\n    get whatsIncluded() {\n        return this.querySelector('[slot=\"merch-whats-included\"]');\n    }\n\n    setOfferSelectOnPanel(offerSelect) {\n        offerSelect.setAttribute('variant', 'subscription-options');\n        this.subscriptionPanel.offerSelect?.remove();\n        this.subscriptionPanel.appendChild(offerSelect);\n    }\n\n    handleStorageChange(event) {\n        const offerSelect = event.detail.offerSelect;\n        if (!offerSelect) return;\n        this.setOfferSelectOnPanel(offerSelect);\n    }\n\n    get preselectedCardId() {\n        const preselectedCardIds =\n            parseState()\n                ['select-cards']?.split(',')\n                .reduce((res, item) => {\n                    const formattedItem = decodeURIComponent(\n                        item.trim().toLowerCase(),\n                    );\n                    formattedItem && res.push(formattedItem);\n                    return res;\n                }, []) || [];\n\n        if (preselectedCardIds.length && this.selectedTab === TAB_INDIVIDUALS) {\n            return preselectedCardIds[0];\n        } else if (\n            preselectedCardIds.length > 1 &&\n            this.selectedTab === TAB_BUSINESS\n        ) {\n            return preselectedCardIds[1];\n        } else if (\n            preselectedCardIds.length > 2 &&\n            this.selectedTab === TAB_EDUCATION\n        ) {\n            return preselectedCardIds[2];\n        }\n    }\n\n    get cardToBePreselected() {\n        return this.selectedTabPanel\n            ?.querySelector('slot')\n            .assignedElements()\n            .find((cardEl) => {\n                const cardTitle =\n                    cardEl\n                        .querySelector('.heading-xs')\n                        ?.textContent.trim()\n                        .toLowerCase() || '';\n                return (\n                    this.preselectedCardId &&\n                    cardTitle.includes(this.preselectedCardId)\n                );\n            });\n    }\n\n    selectCard(card, force = false) {\n        // todo make a stable this.selectedCard,\n        // then add 'if (card === this.selectedCard) return;'\n        const tabPanel = this.selectedTabPanel;\n        let selectedCard = tabPanel?.card;\n        if (force || !selectedCard) {\n            // on tab change we select the card only if no card is selected already.\n            if (selectedCard) {\n                selectedCard.selected = undefined;\n            }\n            selectedCard = this.cardToBePreselected || card;\n            selectedCard.selected = true;\n            if (tabPanel) {\n                tabPanel.card = selectedCard;\n            } else {\n                this.selectSingleCard(selectedCard);\n            }\n        }\n        selectedCard.focus();\n\n        this.subscriptionPanel.quantitySelect?.remove();\n        const quantitySelect = selectedCard.quantitySelect?.cloneNode(true);\n        if (quantitySelect) {\n            this.subscriptionPanel.appendChild(quantitySelect);\n        }\n        const offerSelect = selectedCard.offerSelect.cloneNode(true);\n        this.setOfferSelectOnPanel(offerSelect);\n    }\n\n    handleWhatsIncludedClick(event) {\n        event.preventDefault();\n        this.whatsIncluded?.classList.toggle('hidden');\n    }\n\n    async processCards() {\n        const allCards = [...this.querySelectorAll('merch-card')];\n        allCards.forEach((card, i) => {\n            const { customerSegment, marketSegment } = card.offerSelect;\n            if (customerSegment === 'INDIVIDUAL') {\n                if (marketSegment === 'COM') {\n                    card.setAttribute('slot', 'individuals');\n                } else if (marketSegment === 'EDU') {\n                    card.setAttribute('slot', 'education');\n                }\n            } else if (customerSegment === 'TEAM') {\n                card.setAttribute('slot', 'business');\n            }\n            card.addEventListener('click', () => this.selectCard(card, true));\n        });\n        this.ready = true;\n        this.requestUpdate();\n        await this.updateComplete;\n        await this.tabElement?.updateComplete;\n        this.selectCard(\n            allCards.length === 1 ? allCards[0] : this.firstCardInSelectedTab,\n            true,\n        );\n    }\n\n    merchTwpReady() {\n        if (\n            // wait for all merch-offer-selects to be ready\n            this.querySelector('merch-card merch-offer-select:not([plan-type])')\n        )\n            return;\n        this.processCards();\n    }\n\n    /** All the getters for DOM elements */\n    get cards() {\n        // only cards with a slot are considered valid.\n        return this.querySelectorAll('merch-card[slot]');\n    }\n\n    get cciCards() {\n        return this.querySelectorAll('merch-card[slot=\"individuals\"]');\n    }\n\n    get cctCards() {\n        return this.querySelectorAll('merch-card[slot=\"business\"]');\n    }\n\n    get cceCards() {\n        return this.querySelectorAll('merch-card[slot=\"education\"]');\n    }\n\n    get subscriptionPanel() {\n        return this.querySelector('merch-subscription-panel');\n    }\n\n    get tabElement() {\n        return this.shadowRoot.querySelector('sp-tabs');\n    }\n}\n\nwindow.customElements.define(TAG_NAME, MerchTwpD2P);\n", "/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport type { ReactiveController, ReactiveElement } from 'lit';\n\nexport const DARK_MODE = '(prefers-color-scheme: dark)';\nexport const IS_MOBILE =\n    '(max-width: 700px) and (hover: none) and (pointer: coarse), (max-height: 700px) and (hover: none) and (pointer: coarse)';\n\nexport class MatchMediaController implements ReactiveController {\n    key = Symbol('match-media-key');\n\n    matches = false;\n\n    protected host: ReactiveElement;\n\n    protected media: MediaQueryList;\n\n    constructor(host: ReactiveElement, query: string) {\n        this.host = host;\n        this.host.addController(this);\n        this.media = window.matchMedia(query);\n        this.matches = this.media.matches;\n        this.onChange = this.onChange.bind(this);\n        host.addController(this);\n    }\n\n    public hostConnected(): void {\n        this.media?.addEventListener('change', this.onChange);\n    }\n\n    public hostDisconnected(): void {\n        this.media?.removeEventListener('change', this.onChange);\n    }\n\n    protected onChange(event: MediaQueryListEvent): void {\n        if (this.matches === event.matches) return;\n        this.matches = event.matches;\n        this.host.requestUpdate(this.key, !this.matches);\n    }\n}\n", "import { css } from 'lit';\n\nexport const styles = css`\n    :host {\n        display: flex;\n        box-sizing: border-box;\n        width: 100%;\n        max-width: 972px;\n        background-color: #f8f8f8;\n    }\n\n    sp-theme {\n        display: contents;\n    }\n\n    ::slotted(p) {\n        margin: 0;\n    }\n\n    .cards {\n        display: flex;\n        gap: var(--consonant-merch-spacing-xs);\n    }\n\n    #backButton {\n        position: absolute;\n        border-width: 0;\n    }\n\n    ::slotted([slot='detail-xl']) {\n        font-size: 18px;\n        font-weight: bold;\n        color: #2c2c2c;\n        margin: 0;\n    }\n\n    ::slotted([slot='merch-whats-included']) {\n        align-self: auto;\n        width: 100%;\n        position: absolute;\n        background: #fff;\n        height: 100%;\n        padding: 30px;\n        border-radius: 10px;\n        box-sizing: border-box;\n    }\n\n    ::slotted([slot$='-footer']) {\n        flex-basis: 100%;\n    }\n\n    ::slotted([slot='merch-whats-included'].hidden) {\n        display: none;\n    }\n\n    /* Mobile */\n\n    .mobile {\n        box-sizing: border-box;\n        display: flex;\n        flex-direction: column;\n        flex: 1;\n        align-items: center;\n        max-height: 100vh;\n        padding: 30px 30px 0 30px;\n        width: 100vw;\n        gap: 16px;\n    }\n\n    .mobile #backButton {\n        top: 12px;\n        left: 12px;\n    }\n\n    .mobile ::slotted([slot='detail-xl']) {\n        max-width: 455px;\n        width: 100%;\n    }\n\n    .mobile[data-step='2'] {\n        padding-top: 54px;\n        background-color: #f5f5f5; /* make a variable */\n    }\n\n    [data-step='2'] sp-tabs {\n        display: none;\n    }\n\n    #card-icons-title {\n        display: flex;\n        align-items: center;\n        gap: 8px;\n        align-self: center;\n        max-width: 400px;\n        width: 100%;\n    }\n\n    #card-icons-title h3 {\n        margin: 0;\n        font-size: 18px;\n    }\n\n    .mobile sp-tabs {\n        width: 100%;\n        max-width: 455px;\n    }\n\n    .mobile sp-tab-panel {\n        height: calc(100vh - 268px);\n        flex: 1;\n    }\n\n    .mobile .cards {\n        padding-top: 2px;\n        align-items: center;\n        flex: 1;\n        flex-direction: column;\n        overflow-y: auto;\n        padding-bottom: 50px;\n    }\n\n    .mobile #continueButton {\n        align-items: center;\n        width: 100%;\n        height: 120px;\n        display: flex;\n        gap: 16px;\n        flex-direction: column;\n        place-content: center;\n        position: fixed;\n        bottom: 0;\n        box-shadow: 0px -8px 10px -5px rgba(112, 112, 112, 0.1);\n        background-color: #fff;\n        padding: 0 30px;\n    }\n\n    #continueButton sp-button {\n        width: 80%;\n        min-width: 110px;\n        max-width: 300px;\n    }\n\n    .mobile ::slotted(merch-card) {\n        width: 300px;\n    }\n\n    .mobile #content {\n        display: flex;\n        flex: 1;\n        flex-direction: column;\n        padding: 30px 30px 0 30px;\n    }\n\n    .desktop {\n        display: flex;\n        width: 972px;\n        min-height: 680px;\n        position: relative;\n        flex: 1;\n    }\n\n    .desktop .cards {\n        flex-wrap: wrap;\n    }\n\n    .desktop #content {\n        display: flex;\n        flex: 1;\n        flex-direction: column;\n        padding: 30px 30px 0 30px;\n    }\n\n    .desktop #content slot[name='single-card'] {\n        display: block;\n        margin-top: 24px;\n        margin-bottom: 24px;\n    }\n\n    ::slotted(merch-card[slot='single-card']) {\n        box-shadow: none;\n    }\n\n    .desktop ::slotted([slot='detail-xl']) {\n        font-size: 20px;\n    }\n\n    .desktop aside {\n        background-color: #f5f5f5;\n        border-radius: 8px; /* not sure if necessary */\n        display: flex;\n        flex-direction: column;\n        width: 360px;\n        box-sizing: border-box;\n        padding: 0 30px 0 30px;\n    }\n\n    .desktop sp-tabs {\n        margin: 12px 0 30px 0;\n    }\n\n    sp-tab-panel {\n        padding-top: 20px;\n    }\n\n    .desktop ::slotted(merch-card) {\n        width: 268px;\n    }\n\n    .desktop ::slotted(merch-subscription-panel) {\n        margin-top: 40px;\n    }\n\n    .desktop #continueButton {\n        position: absolute;\n        bottom: 30px;\n        right: 30px;\n    }\n\n    .desktop #backButton {\n        left: 30px;\n        bottom: 30px;\n    }\n`;\n", "export const SPECTRUM_MOBILE_LANDSCAPE = '(max-width: 700px)';\nexport const MOBILE_LANDSCAPE = '(max-width: 767px)';\nexport const TABLET_DOWN = '(max-width: 1199px)';\nexport const TABLET_UP = '(min-width: 768px)';\nexport const DESKTOP_UP = '(min-width: 1200px)';\nexport const LARGE_DESKTOP = '(min-width: 1600px)';\n", "/**\n * Common namespace prefix for CSS classes and DOM event types.\n * @see https://git.corp.adobe.com/wcms/team/discussions/27\n */\nexport const NAMESPACE = 'merch';\n/**\n * This CSS class name is used to:\n * - show only selected offer on a card connected to a subscription panel\n * - TBD\n */\nexport const CLASS_NAME_HIDDEN = 'hidden';\n/**\n * Event type dispatched by the commenrce service whenever it is ready.\n * Should be in sync with `packages/commerce/src/constants.js`.\n */\nexport const EVENT_TYPE_READY = 'wcms:commerce:ready';\n/**\n * Tag name of the commerce service component.\n * Should be in sync with `packages/commerce/src/constants.js`.\n */\nexport const TAG_NAME_SERVICE = 'mas-commerce-service';\n\n/** Event to dispatch when a merch-offer is ready */\nexport const EVENT_MERCH_OFFER_READY = 'merch-offer:ready';\n\n/** Event to dispatch when all the offers of a merch-offer-select sont ready */\nexport const EVENT_MERCH_OFFER_SELECT_READY = 'merch-offer-select:ready';\n\n/** Event to dispatch when a merch-card is ready */\nexport const EVENT_MERCH_CARD_READY = 'merch-card:ready';\n\nexport const EVENT_MERCH_CARD_ACTION_MENU_TOGGLE =\n    'merch-card:action-menu-toggle';\n\nexport const EVENT_OFFER_SELECTED = 'merch-offer:selected';\n\nexport const EVENT_MERCH_STOCK_CHANGE = 'merch-stock:change';\n\nexport const EVENT_MERCH_STORAGE_CHANGE = 'merch-storage:change';\n\nexport const EVENT_MERCH_QUANTITY_SELECTOR_CHANGE =\n    'merch-quantity-selector:change';\n\nexport const EVENT_MERCH_SEARCH_CHANGE = 'merch-search:change';\n\nexport const EVENT_MERCH_CARD_COLLECTION_SORT = 'merch-card-collection:sort';\n\nexport const EVENT_MERCH_CARD_COLLECTION_SHOWMORE =\n    'merch-card-collection:showmore';\n\nexport const EVENT_MERCH_SIDENAV_SELECT = 'merch-sidenav:select';\n\nexport const EVENT_AEM_LOAD = 'aem:load';\nexport const EVENT_AEM_ERROR = 'aem:error';\nexport const EVENT_MAS_READY = 'mas:ready';\nexport const EVENT_MAS_ERROR = 'mas:error';\n\nexport const CLASS_NAME_FAILED = 'placeholder-failed';\nexport const CLASS_NAME_PENDING = 'placeholder-pending';\nexport const CLASS_NAME_RESOLVED = 'placeholder-resolved';\n\nexport const ERROR_MESSAGE_BAD_REQUEST = 'Bad WCS request';\nexport const ERROR_MESSAGE_OFFER_NOT_FOUND = 'Commerce offer not found';\nexport const ERROR_MESSAGE_MISSING_LITERALS_URL = 'Literals URL not provided';\n\nexport const EVENT_TYPE_FAILED = 'mas:failed';\nexport const EVENT_TYPE_RESOLVED = 'mas:resolved';\n\nexport const LOG_NAMESPACE = 'mas/commerce';\n\nexport const PARAM_ENV = 'commerce.env';\nexport const PARAM_LANDSCAPE = 'commerce.landscape';\nexport const PARAM_AOS_API_KEY = 'commerce.aosKey';\nexport const PARAM_WCS_API_KEY = 'commerce.wcsKey';\n\nexport const WCS_PROD_URL = 'https://www.adobe.com/web_commerce_artifact';\nexport const WCS_STAGE_URL =\n    'https://www.stage.adobe.com/web_commerce_artifact_stage';\n\nexport const STATE_FAILED = 'failed';\nexport const STATE_PENDING = 'pending';\nexport const STATE_RESOLVED = 'resolved';\n\nexport const Landscape = {\n    DRAFT: 'DRAFT',\n    PUBLISHED: 'PUBLISHED',\n};\n", "const EVENT_HASHCHANGE = 'hashchange';\n\n/**\n * @param {*} hash string representing an URL hash\n * @returns an object representing the state set with key value pairs in the URL hash\n */\nexport function parseState(hash = window.location.hash) {\n    const result = [];\n    const keyValuePairs = hash.replace(/^#/, '').split('&');\n\n    for (const pair of keyValuePairs) {\n        const [key, value = ''] = pair.split('=');\n        if (key) {\n            result.push([key, decodeURIComponent(value.replace(/\\+/g, ' '))]);\n        }\n    }\n    return Object.fromEntries(result);\n}\n\n/**\n * push state of a component to the URL hash. Component is supposed to have\n *  a deeplink property, and value is supposed to be a non empty string\n * @param {*} component component with deeplink property\n * @param {*} value value to push as state\n */\nexport function pushStateFromComponent(component, value) {\n    if (component.deeplink) {\n        const state = {};\n        state[component.deeplink] = value;\n        pushState(state);\n    }\n}\n\nexport function pushState(state) {\n    const hash = new URLSearchParams(window.location.hash.slice(1));\n    Object.entries(state).forEach(([key, value]) => {\n        if (value) {\n            hash.set(key, value);\n        } else {\n            hash.delete(key);\n        }\n    });\n    hash.sort();\n    const value = hash.toString();\n    if (value === window.location.hash) return;\n    let lastScrollTop = window.scrollY || document.documentElement.scrollTop;\n    window.location.hash = value;\n    window.scrollTo(0, lastScrollTop);\n}\n\n/**\n *Deep link helper\n * @param {*} callback function that expects an object with properties that have changed compared to previous state\n * @returns a disposer function that stops listening to hash changes\n */\nexport function deeplink(callback) {\n    const handler = () => {\n        if (window.location.hash && !window.location.hash.includes('=')) return;\n        const state = parseState(window.location.hash);\n        callback(state);\n    };\n    handler();\n    window.addEventListener(EVENT_HASHCHANGE, handler);\n    return () => {\n        window.removeEventListener(EVENT_HASHCHANGE, handler);\n    };\n}\n"],
  "mappings": "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",
  "names": ["LitElement", "html", "MatchMediaController", "host", "query", "_a", "event", "css", "styles", "TABLET_DOWN", "EVENT_MERCH_CARD_READY", "EVENT_OFFER_SELECTED", "EVENT_MERCH_STORAGE_CHANGE", "EVENT_MERCH_QUANTITY_SELECTOR_CHANGE", "parseState", "hash", "result", "keyValuePairs", "pair", "key", "value", "TAG_NAME", "TAB_INDIVIDUALS", "TAB_BUSINESS", "TAB_EDUCATION", "_log", "_cardIcons", "_handleOfferSelected", "_mobileAndTablet", "MerchTwpD2P", "LitElement", "__publicField", "__privateAdd", "MatchMediaController", "TABLET_DOWN", "__privateSet", "__privateGet", "html", "plan", "event", "card", "el", "EVENT_MERCH_CARD_READY", "EVENT_OFFER_SELECTED", "EVENT_MERCH_QUANTITY_SELECTOR_CHANGE", "EVENT_MERCH_STORAGE_CHANGE", "offerSelect", "preselectedCardIds", "parseState", "res", "item", "formattedItem", "cardEl", "cardTitle", "force", "tabPanel", "selectedCard", "quantitySelect", "allCards", "i", "customerSegment", "marketSegment", "styles"]
}

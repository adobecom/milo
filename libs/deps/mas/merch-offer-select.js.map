{
  "version": 3,
  "sources": ["../../features/mas/src/merch-offer.js", "../../features/mas/src/merch-offer-select.js", "../../features/mas/src/constants.js", "../../features/mas/src/merch-offer.css.js"],
  "sourcesContent": ["import { html, LitElement } from 'lit';\nimport { styles } from './merch-offer.css.js';\nimport { EVENT_MERCH_OFFER_READY } from './constants.js';\n\nconst TAG_NAME = 'merch-offer';\nclass MerchOffer extends LitElement {\n    static properties = {\n        text: { type: String },\n        selected: { type: Boolean, attribute: 'aria-selected', reflect: true },\n        badgeText: { type: String, attribute: 'badge-text' },\n        type: { type: String, attribute: 'type', reflect: true }, // values: radio, subscription-option\n        planType: { type: String, attribute: 'plan-type', reflect: true },\n    };\n\n    static styles = [styles];\n\n    constructor() {\n        super();\n        this.type = 'radio';\n        this.selected = false;\n    }\n\n    getOptionValue(slotName) {\n        return this.querySelector(`[slot=\"${slotName}\"]`);\n    }\n\n    // setting attributes can't be done in constructor, so using connectedCallback\n    connectedCallback() {\n        super.connectedCallback();\n        this.initOffer();\n        this.configuration = this.closest('quantity-selector');\n        if (!this.hasAttribute('tabindex') && !this.configuration) {\n            this.tabIndex = 0;\n        }\n        if (!this.hasAttribute('role') && !this.configuration) {\n            this.role = 'radio';\n        }\n    }\n\n    get asRadioOption() {\n        return html` <div class=\"merch-Radio\">\n            <input tabindex=\"-1\" type=\"radio\" class=\"merch-Radio-input\" />\n            <span class=\"merch-Radio-button\"></span>\n            <span class=\"merch-Radio-label\">${this.text}</span>\n        </div>`;\n    }\n\n    get asSubscriptionOption() {\n        return html`<slot name=\"commitment\"></slot>\n            <slot name=\"price\"></slot>\n            <slot name=\"teaser\"></slot>\n            <div id=\"condition\">\n                <slot name=\"condition\"></slot>\n                <span id=\"info\">\n                    <sp-icon-info-outline size=\"s\"></sp-icon-info-outline\n                ></span>\n                <sp-overlay placement=\"top\" trigger=\"info@hover\" type=\"hint\">\n                    <sp-tooltip\n                        ><slot name=\"condition-tooltip\"></slot\n                    ></sp-tooltip>\n                </sp-overlay>\n            </div>`;\n    }\n\n    render() {\n        if (this.configuration) return '';\n        if (!this.price) return '';\n\n        if (this.type === 'subscription-option')\n            return this.asSubscriptionOption;\n        return this.asRadioOption;\n    }\n\n    get price() {\n        return this.querySelector(\n            'span[is=\"inline-price\"]:not([data-template=\"strikethrough\"])',\n        );\n    }\n\n    get cta() {\n        return this.querySelector('a[is=\"checkout-link\"]');\n    }\n\n    get prices() {\n        return this.querySelectorAll('span[is=\"inline-price\"]');\n    }\n\n    get customerSegment() {\n        return this.price?.value?.[0].customerSegment;\n    }\n\n    get marketSegment() {\n        return this.price?.value?.[0].marketSegments[0];\n    }\n\n    async initOffer() {\n        if (!this.price) return;\n        this.prices.forEach((el) => el.setAttribute('slot', 'price'));\n        await this.updateComplete;\n        await Promise.all([...this.prices].map((price) => price.onceSettled()));\n        const {\n            value: [offer],\n        } = this.price;\n        this.planType = offer.planType;\n        await this.updateComplete;\n        this.dispatchEvent(\n            new CustomEvent(EVENT_MERCH_OFFER_READY, { bubbles: true }),\n        );\n    }tr\n}\n\ncustomElements.define(TAG_NAME, MerchOffer);\n", "import { css, html, LitElement } from 'lit';\nimport {\n    EVENT_MERCH_OFFER_READY,\n    EVENT_MERCH_OFFER_SELECT_READY,\n    EVENT_MERCH_QUANTITY_SELECTOR_CHANGE,\n    EVENT_OFFER_SELECTED,\n} from './constants.js';\n\nclass MerchOfferSelect extends LitElement {\n    static styles = css`\n        :host {\n            display: inline-block;\n        }\n\n        :host .horizontal {\n            display: flex;\n            flex-direction: row;\n        }\n\n        fieldset {\n            display: contents;\n        }\n\n        :host([variant='subscription-options']) {\n            display: flex;\n            flex-direction: column;\n            gap: var(--consonant-merch-spacing-xs);\n        }\n    `;\n\n    static properties = {\n        offers: { type: Array },\n        selectedOffer: { type: Object },\n        defaults: { type: Object },\n        variant: { type: String, attribute: 'variant', reflect: true },\n        planType: { type: String, attribute: 'plan-type', reflect: true },\n        stock: { type: Boolean, reflect: true },\n    };\n\n    #handleOfferSelectionByQuantityFn;\n\n    constructor() {\n        super();\n        this.defaults = {};\n        this.variant = 'plans';\n    }\n\n    /** Returns the default values for the price, cta, and description slots.\n     * These are the values coming from the container itself, not from the merch-offer elements.\n     * E.g. initial merch-card description text. There is no default price or cta in the container.\n     */\n    saveContainerDefaultValues() {\n        const container = this.closest(this.getAttribute('container'));\n        const description = container\n            ?.querySelector('[slot=\"description\"]:not(merch-offer > *)')\n            ?.cloneNode(true);\n        const badgeText = container?.badgeText;\n        return {\n            description,\n            badgeText,\n        };\n    }\n\n    getSlottedElement(slotName, container) {\n        const containerEl =\n            container || this.closest(this.getAttribute('container'));\n        return containerEl.querySelector(\n            `[slot=\"${slotName}\"]:not(merch-offer > *)`,\n        );\n    }\n\n    updateSlot(slotName, container) {\n        const slot = this.getSlottedElement(slotName, container);\n        if (!slot) return;\n        const node = this.selectedOffer.getOptionValue(slotName)\n            ? this.selectedOffer.getOptionValue(slotName)\n            : this.defaults[slotName];\n        if (node) {\n            slot.replaceWith(node.cloneNode(true));\n        }\n    }\n\n    handleOfferSelection(e) {\n        const newOffer = e.detail;\n        this.selectOffer(newOffer);\n    }\n\n    handleOfferSelectionByQuantity(event) {\n        const selected = event.detail.option;\n        const selectedValue = Number.parseInt(selected);\n        const newOffer = this.findAppropriateOffer(selectedValue);\n        this.selectOffer(newOffer);\n        const cta = this.getSlottedElement('cta');\n        cta.setAttribute('data-quantity', selectedValue);\n    }\n\n    selectOffer(newOffer) {\n        if (!newOffer) {\n            return;\n        }\n        const previousOffer = this.selectedOffer;\n        if (previousOffer) {\n            previousOffer.selected = false;\n        }\n        newOffer.selected = true;\n        this.selectedOffer = newOffer;\n        this.planType = newOffer.planType;\n        this.updateContainer();\n        this.updateComplete.then(() => {\n            this.dispatchEvent(\n                new CustomEvent(EVENT_OFFER_SELECTED, {\n                    detail: this,\n                    bubbles: true,\n                }),\n            );\n        });\n    }\n\n    findAppropriateOffer(selectedValue) {\n        let previousOfferWithValue = null;\n        const foundOffer = this.offers.find((offer) => {\n            const offerAttribute = Number.parseInt(offer.getAttribute('value'));\n            if (offerAttribute === selectedValue) {\n                return true;\n            } else if (offerAttribute > selectedValue) {\n                return false;\n            } else {\n                previousOfferWithValue = offer;\n            }\n        });\n        return foundOffer || previousOfferWithValue;\n    }\n\n    /**\n     * If badge text is empty string - delete the badge.\n     * If badge text is present - set the badge.\n     * If badge text is null or undefined - set default badge. */\n    updateBadgeText(container) {\n        if (this.selectedOffer.badgeText === '') {\n            container.badgeText = null;\n        } else if (this.selectedOffer.badgeText) {\n            container.badgeText = this.selectedOffer.badgeText;\n        } else {\n            container.badgeText = this.defaults.badgeText;\n        }\n    }\n\n    /** Will update price, cta, and other slots/properties in parent container (e.g. merch-card or twp modal) */\n    updateContainer() {\n        const container = this.closest(this.getAttribute('container'));\n        if (!container || !this.selectedOffer) return;\n\n        this.updateSlot('cta', container);\n        this.updateSlot('secondary-cta', container);\n        this.updateSlot('price', container);\n        if (this.manageableMode) return;\n        this.updateSlot('description', container);\n        this.updateBadgeText(container);\n    }\n\n    render() {\n        return html`<fieldset><slot class=\"${this.variant}\"></slot></fieldset>`;\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n\n        this.addEventListener('focusin', this.handleFocusin);\n        this.addEventListener('click', this.handleFocusin);\n\n        this.addEventListener(\n            EVENT_MERCH_OFFER_READY,\n            this.handleOfferSelectReady,\n        );\n\n        const quantitySelect = this.closest('merch-quantity-select');\n        this.manageableMode = quantitySelect;\n        this.offers = [...this.querySelectorAll('merch-offer')];\n\n        this.#handleOfferSelectionByQuantityFn =\n            this.handleOfferSelectionByQuantity.bind(this);\n        if (this.manageableMode) {\n            quantitySelect.addEventListener(\n                EVENT_MERCH_QUANTITY_SELECTOR_CHANGE,\n                this.#handleOfferSelectionByQuantityFn,\n            );\n        } else {\n            this.defaults = this.saveContainerDefaultValues();\n        }\n        this.selectedOffer = this.offers[0];\n        if (this.planType) {\n            // make sure that merch-offers are initialized.\n            this.updateContainer();\n        }\n    }\n\n    get miniCompareMobileCard() {\n        return (\n            this.merchCard?.variant === 'mini-compare-chart' && this.isMobile\n        );\n    }\n\n    get merchCard() {\n        return this.closest('merch-card');\n    }\n\n    get isMobile() {\n        return window.matchMedia('(max-width: 767px)').matches;\n    }\n\n    disconnectedCallback() {\n      super.disconnectedCallback();\n        this.removeEventListener(\n            EVENT_MERCH_QUANTITY_SELECTOR_CHANGE,\n            this.#handleOfferSelectionByQuantityFn,\n        );\n        this.removeEventListener(\n            EVENT_MERCH_OFFER_READY,\n            this.handleOfferSelectReady,\n        );\n        this.removeEventListener('focusin', this.handleFocusin);\n        this.removeEventListener('click', this.handleFocusin);\n    }\n\n    get price() {\n        return this.querySelector(\n            'merch-offer[aria-selected] [is=\"inline-price\"]',\n        );\n    }\n\n    get customerSegment() {\n        return this.selectedOffer?.customerSegment;\n    }\n\n    get marketSegment() {\n        return this.selectedOffer?.marketSegment;\n    }\n\n    handleFocusin(event) {\n        if (event.target?.nodeName === 'MERCH-OFFER') {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            this.selectOffer(event.target);\n        }\n    }\n\n    async handleOfferSelectReady() {\n        if (this.planType) return;\n        if (this.querySelector('merch-offer:not([plan-type])')) return;\n        this.planType = this.selectedOffer.planType;\n        await this.updateComplete;\n\n        this.selectOffer(\n            this.selectedOffer ??\n                this.querySelector('merch-offer[aria-selected]') ??\n                this.querySelector('merch-offer'),\n        );\n\n        this.dispatchEvent(\n            new CustomEvent(EVENT_MERCH_OFFER_SELECT_READY, { bubbles: true }),\n        );\n    }\n}\n\ncustomElements.define('merch-offer-select', MerchOfferSelect);\n", "/**\n * Common namespace prefix for CSS classes and DOM event types.\n * @see https://git.corp.adobe.com/wcms/team/discussions/27\n */\nexport const NAMESPACE = 'merch';\n/**\n * This CSS class name is used to:\n * - show only selected offer on a card connected to a subscription panel\n * - TBD\n */\nexport const CLASS_NAME_HIDDEN = 'hidden';\n/**\n * Event type dispatched by the commenrce service whenever it is ready.\n * Should be in sync with `packages/commerce/src/constants.js`.\n */\nexport const EVENT_TYPE_READY = 'wcms:commerce:ready';\n/**\n * Tag name of the commerce service component.\n * Should be in sync with `packages/commerce/src/constants.js`.\n */\nexport const TAG_NAME_SERVICE = 'mas-commerce-service';\n\n/** Event to dispatch when a merch-offer is ready */\nexport const EVENT_MERCH_OFFER_READY = 'merch-offer:ready';\n\n/** Event to dispatch when all the offers of a merch-offer-select sont ready */\nexport const EVENT_MERCH_OFFER_SELECT_READY = 'merch-offer-select:ready';\n\n/** Event to dispatch when a merch-card is ready */\nexport const EVENT_MERCH_CARD_READY = 'merch-card:ready';\n\nexport const EVENT_MERCH_CARD_ACTION_MENU_TOGGLE =\n    'merch-card:action-menu-toggle';\n\nexport const EVENT_OFFER_SELECTED = 'merch-offer:selected';\n\nexport const EVENT_MERCH_STOCK_CHANGE = 'merch-stock:change';\n\nexport const EVENT_MERCH_STORAGE_CHANGE = 'merch-storage:change';\n\nexport const EVENT_MERCH_QUANTITY_SELECTOR_CHANGE =\n    'merch-quantity-selector:change';\n\nexport const EVENT_MERCH_SEARCH_CHANGE = 'merch-search:change';\n\nexport const EVENT_MERCH_CARD_COLLECTION_SORT = 'merch-card-collection:sort';\n\nexport const EVENT_MERCH_CARD_COLLECTION_SHOWMORE =\n    'merch-card-collection:showmore';\n\nexport const EVENT_MERCH_SIDENAV_SELECT = 'merch-sidenav:select';\n\nexport const EVENT_AEM_LOAD = 'aem:load';\nexport const EVENT_AEM_ERROR = 'aem:error';\nexport const EVENT_MAS_READY = 'mas:ready';\nexport const EVENT_MAS_ERROR = 'mas:error';\n\nexport const CLASS_NAME_FAILED = 'placeholder-failed';\nexport const CLASS_NAME_PENDING = 'placeholder-pending';\nexport const CLASS_NAME_RESOLVED = 'placeholder-resolved';\n\nexport const ERROR_MESSAGE_BAD_REQUEST = 'Bad WCS request';\nexport const ERROR_MESSAGE_OFFER_NOT_FOUND = 'Commerce offer not found';\nexport const ERROR_MESSAGE_MISSING_LITERALS_URL = 'Literals URL not provided';\n\nexport const EVENT_TYPE_FAILED = 'mas:failed';\nexport const EVENT_TYPE_RESOLVED = 'mas:resolved';\n\nexport const LOG_NAMESPACE = 'mas/commerce';\n\nexport const PARAM_ENV = 'commerce.env';\nexport const PARAM_LANDSCAPE = 'commerce.landscape';\nexport const PARAM_AOS_API_KEY = 'commerce.aosKey';\nexport const PARAM_WCS_API_KEY = 'commerce.wcsKey';\n\nexport const WCS_PROD_URL = 'https://www.adobe.com/web_commerce_artifact';\nexport const WCS_STAGE_URL =\n    'https://www.stage.adobe.com/web_commerce_artifact_stage';\n\nexport const STATE_FAILED = 'failed';\nexport const STATE_PENDING = 'pending';\nexport const STATE_RESOLVED = 'resolved';\n\nexport const Landscape = {\n    DRAFT: 'DRAFT',\n    PUBLISHED: 'PUBLISHED',\n};\n", "import { css } from 'lit';\n\nexport const styles = css`\n    :host {\n        --merch-radio: rgba(82, 88, 228);\n        --merch-radio-hover: rgba(64, 70, 202);\n        --merch-radio-down: rgba(50, 54, 168);\n        --merch-radio-selected: rgb(2, 101, 220);\n        --merch-hovered-shadow: 0 0 0 1px #aaa;\n        --merch-selected-shadow: 0 0 0 2px var(--merch-radio-selected);\n        box-sizing: border-box;\n    }\n    .merch-Radio {\n        align-items: flex-start;\n        display: flex;\n        max-inline-size: 100%;\n        margin-inline-end: 19px;\n        min-block-size: 32px;\n        position: relative;\n        vertical-align: top;\n    }\n\n    .merch-Radio-input {\n        block-size: 100%;\n        box-sizing: border-box;\n        cursor: pointer;\n        font-family: inherit;\n        font-size: 100%;\n        inline-size: 100%;\n        line-height: 1.3;\n        margin: 0;\n        opacity: 0;\n        overflow: visible;\n        padding: 0;\n        position: absolute;\n        z-index: 1;\n    }\n\n    .merch-Radio-button {\n        block-size: 14px;\n        box-sizing: border-box;\n        flex-grow: 0;\n        flex-shrink: 0;\n        inline-size: 14px;\n        margin-block-start: 9px;\n        position: relative;\n    }\n\n    .merch-Radio-button:before {\n        border-color: rgb(109, 109, 109);\n        border-radius: 50%;\n        border-style: solid;\n        border-width: 2px;\n        box-sizing: border-box;\n        content: '';\n        display: block;\n        height: 14px;\n        position: absolute;\n        transition:\n            border 0.13s ease-in-out,\n            box-shadow 0.13s ease-in-out;\n        width: 14px;\n        z-index: 0;\n    }\n\n    .merch-Radio-button:after {\n        border-radius: 50%;\n        content: '';\n        display: block;\n        left: 50%;\n        position: absolute;\n        top: 50%;\n        transform: translateX(-50%) translateY(-50%);\n        transition:\n            opacity 0.13s ease-out,\n            margin 0.13s ease-out;\n    }\n\n    :host(:active) .merch-Radio-button:before {\n        border-color: var(--merch-radio-down);\n    }\n\n    :host(:hover) .merch-Radio-button:before {\n        border-color: var(--merch-radio-hover);\n    }\n\n    :host([aria-selected]) .merch-Radio-button::before {\n        border-color: var(--merch-radio-selected);\n        border-width: 5px;\n    }\n\n    .merch-Radio-label {\n        color: rgb(34, 34, 34);\n        font-size: 14px;\n        line-height: 18.2px;\n        margin-block-end: 9px;\n        margin-block-start: 6px;\n        margin-inline-start: 10px;\n        text-align: start;\n        transition: color 0.13s ease-in-out;\n    }\n\n    input {\n        height: 0;\n        outline: none;\n        position: absolute;\n        width: 0;\n        z-index: -1;\n    }\n\n    .label {\n        background-color: white;\n        border: 1px solid transparent;\n        border-radius: var(--consonant-merch-spacing-xxxs);\n        cursor: pointer;\n        display: block;\n        margin: var(--consonant-merch-spacing-xs) 0;\n        padding: var(--consonant-merch-spacing-xs);\n        position: relative;\n    }\n\n    label:hover {\n        box-shadow: var(--merch-hovered-shadow);\n    }\n\n    :host([aria-selected]) label {\n        box-shadow: var(--merch-selected-shadow);\n    }\n\n    sp-icon-info-outline {\n        color: #6e6e6e;\n        content: '';\n    }\n\n    ::slotted(p),\n    ::slotted(h5) {\n        margin: 0;\n    }\n\n    ::slotted([slot='commitment']) {\n        font-size: 14px !important;\n        font-weight: normal !important;\n        line-height: 17px !important;\n    }\n\n    #condition {\n        line-height: 15px;\n    }\n\n    ::slotted([slot='condition']) {\n        display: inline-block;\n        font-style: italic;\n        font-size: 12px;\n    }\n\n    ::slotted([slot='teaser']) {\n        color: #2d9d78;\n        font-size: 14px;\n        font-weight: bold;\n        line-height: 17px;\n    }\n\n    :host([type='subscription-option']) slot[name='price'] {\n        display: flex;\n        flex-direction: row-reverse;\n        align-self: baseline;\n        gap: 6px;\n    }\n\n    ::slotted(span[is='inline-price']) {\n        font-size: 16px;\n        font-weight: bold;\n        line-height: 20px;\n    }\n\n    ::slotted(span[data-template='strikethrough']) {\n        font-weight: normal;\n    }\n\n    :host([type='subscription-option']) {\n        background-color: #fff;\n        box-sizing: border-box;\n        border-width: 2px;\n        border-radius: 5px;\n        border-style: solid;\n        border-color: #eaeaea;\n        cursor: pointer;\n        display: flex;\n        flex-direction: column;\n        gap: 8px;\n        padding: 16px;\n        min-height: 102px;\n    }\n\n    :host([type='subscription-option']:hover) {\n        border-color: #cacaca;\n    }\n\n    :host([type='subscription-option'][aria-selected]) {\n        border-color: #1473e6;\n    }\n\n    :host([type='subscription-option']) #condition {\n        display: flex;\n        align-items: center;\n        gap: 4px;\n    }\n\n    :host([type='subscription-option'])\n        ::slotted([is='inline-price'][data-display-tax='true']) {\n        position: relative;\n        height: 40px;\n    }\n`;\n"],
  "mappings": "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",
  "names": ["html", "LitElement", "css", "html", "LitElement", "EVENT_MERCH_OFFER_READY", "EVENT_MERCH_OFFER_SELECT_READY", "EVENT_OFFER_SELECTED", "EVENT_MERCH_QUANTITY_SELECTOR_CHANGE", "_handleOfferSelectionByQuantityFn", "MerchOfferSelect", "LitElement", "__privateAdd", "container", "description", "badgeText", "slotName", "slot", "node", "newOffer", "event", "selected", "selectedValue", "previousOffer", "EVENT_OFFER_SELECTED", "previousOfferWithValue", "offer", "offerAttribute", "html", "EVENT_MERCH_OFFER_READY", "quantitySelect", "__privateSet", "EVENT_MERCH_QUANTITY_SELECTOR_CHANGE", "__privateGet", "EVENT_MERCH_OFFER_SELECT_READY", "__publicField", "css", "css", "styles", "TAG_NAME", "MerchOffer", "LitElement", "__publicField", "slotName", "html", "el", "price", "offer", "EVENT_MERCH_OFFER_READY", "styles"]
}

{
  "version": 3,
  "sources": ["../src/merch-twp-d2p.js", "../../../node_modules/@spectrum-web-components/reactive-controllers/src/MatchMedia.ts", "../src/merch-twp-d2p.css.js", "../src/media.js", "../src/constants.js"],
  "sourcesContent": ["import { LitElement, html } from 'lit';\n\nimport { MatchMediaController } from '@spectrum-web-components/reactive-controllers/src/MatchMedia.js';\n\nimport { styles } from './merch-twp-d2p.css.js';\nimport { TABLET_DOWN } from './media.js';\nimport {\n    EVENT_MERCH_CARD_READY,\n    EVENT_MERCH_QUANTITY_SELECTOR_CHANGE,\n    EVENT_OFFER_SELECTED,\n} from './constants.js';\n\nconst TAG_NAME = 'merch-twp-d2p';\n\nexport class MerchTwpD2P extends LitElement {\n    static styles = [styles];\n\n    static properties = {\n        individualsText: { type: String, attribute: 'individuals-text' },\n        businessText: { type: String, attribute: 'business-text' },\n        educationText: { type: String, attribute: 'education-text' },\n        continueText: { type: String, attribute: 'continue-text' },\n        step: { type: Number },\n        ready: { type: Boolean },\n    };\n\n    #log;\n\n    #cardIcons;\n    #handleOfferSelected;\n    #mobileAndTablet = new MatchMediaController(this, TABLET_DOWN);\n\n    individualsText = 'Individuals';\n    businessText = 'Business';\n    educationText = 'Students and teachers';\n    continueText = 'Continue';\n    ready = false;\n\n    constructor() {\n        super();\n        this.step = 1;\n        this.#handleOfferSelected = this.handleOfferSelected.bind(this);\n        this.handleWhatsIncludedClick = this.handleWhatsIncludedClick.bind(this);\n    }\n\n    /** @type {Commerce.Log.Instance} */\n    get log() {\n        if (!this.#log) {\n            this.#log = document.head\n                .querySelector('wcms-commerce')\n                ?.Log.module('twp');\n        }\n        return this.#log;\n    }\n\n    get individualsTab() {\n        if (this.cciCards.length === 0) return html``;\n        return html`\n            <sp-tab value=\"individuals\" label=${this.individualsText}>\n                <sp-icon-user slot=\"icon\"></sp-icon-user>\n            </sp-tab>\n            <sp-tab-panel value=\"individuals\">\n                <div class=\"cards\">\n                    <slot name=\"individuals\"></slot>\n                    <slot name=\"cci-footer\"></slot>\n                </div>\n            </sp-tab-panel>\n        `;\n    }\n\n    get businessTab() {\n        if (this.cctCards.length === 0) return html``;\n        return html`\n            <sp-tab value=\"business\" label=${this.businessText}>\n                <sp-icon-user-group slot=\"icon\"></sp-icon-user-group>\n            </sp-tab>\n            <sp-tab-panel value=\"business\">\n                <div class=\"cards\">\n                    <slot name=\"business\"></slot>\n                    <slot name=\"cct-footer\"></slot>\n                </div>\n            </sp-tab-panel>\n        `;\n    }\n\n    get educationTab() {\n        if (this.cceCards.length === 0) return html``;\n        return html`\n            <sp-tab value=\"education\" label=${this.educationText}>\n                <sp-icon-book slot=\"icon\"></sp-icon-book>\n            </sp-tab>\n            <sp-tab-panel value=\"education\">\n            <div class=\"cards\">\n                <slot name=\"education\"></slot>\n                <slot name=\"cce-footer\"></slot>\n            </sp-tab-panel>\n        `;\n    }\n\n    get selectedTabPanel() {\n        return this.shadowRoot.querySelector('sp-tab-panel[selected]');\n    }\n\n    get firstCardInSelectedTab() {\n        return this.selectedTabPanel\n            ?.querySelector('slot')\n            .assignedElements()[0]; // only cards\n    }\n\n    get tabs() {\n        if (this.cards.length < 2) return html``;\n        return html`\n            <sp-tabs\n                emphasized\n                selected=\"individuals\"\n                @change=${this.tabChanged}\n            >\n                ${this.individualsTab} ${this.businessTab} ${this.educationTab}\n            </sp-tabs>\n        `;\n    }\n\n    async tabChanged(event) {\n        await event.target.updateComplete;\n        this.selectCard(this.firstCardInSelectedTab);\n    }\n\n    get desktopLayout() {\n        return html`\n            <div class=\"desktop\">\n                <div id=\"content\">\n                    <slot name=\"detail-xl\"></slot>\n                    ${this.tabs}\n                    <slot name=\"footer-link\"></slot>\n                </div>\n\n                ${this.cciCards.length < 3\n                    ? html`<aside>\n                          <slot name=\"panel\"></slot>\n                      </aside>`\n                    : ''}\n                ${this.continueButton}\n            </div>\n        `;\n    }\n\n    get showSubscriptionPanelInStep1() {\n        return this.cciCards.length < 3 && !this.#mobileAndTablet.matches;\n    }\n\n    get continueButton() {\n        if (this.step !== 1 || this.cciCards.length < 3) return html``;\n        return html`\n            <div id=\"continue\">\n                <sp-button\n                    variant=\"cta\"\n                    size=\"large\"\n                    @click=${this.handleContinue}\n                >\n                    ${this.continueText}\n                </sp-button>\n            </div>\n        `;\n    }\n\n    handleContinue() {\n        if (this.step === 1) {\n            this.#cardIcons = [\n                ...this.selectedTabPanel.card.querySelectorAll('merch-icon'),\n            ].map((el) => el.cloneNode(true));\n            this.step = 2;\n            return;\n        }\n    }\n\n    handleBack() {\n        this.step = 1;\n    }\n\n    get mobileStepTwo() {\n        if (this.step !== 2) return html``;\n        return html`\n            ${this.backButton} ${this.stepTwoCardIconsAndTitle}\n            <slot name=\"panel\"></slot>\n        `;\n    }\n\n    get stepTwoCardIconsAndTitle() {\n        if (!this.selectedTabPanel?.card) return;\n\n        return html`<div id=\"card-icons-title\">\n            ${this.#cardIcons}\n            <h3>${this.selectedTabPanel.card.title}</h3>\n        </div>`;\n    }\n\n    get backButton() {\n        if (this.step !== 2) return html``;\n        return html`<sp-button\n            id=\"backButton\"\n            treatment=\"outline\"\n            variant=\"secondary\"\n            size=\"s\"\n            @click=${this.handleBack}\n        >\n            <sp-icon-chevron-double-left\n                slot=\"icon\"\n            ></<sp-icon-chevron-double-left></sp-icon-chevron-double-left\n            > Back</sp-button>`;\n    }\n\n    get mobileLayout() {\n        return html`\n            <div class=\"mobile\" data-step=\"${this.step}\">\n                <slot name=\"detail-xl\"></slot>\n                ${this.tabs} ${this.continueButton} ${this.mobileStepTwo}\n            </div>\n        `;\n    }\n\n    render() {\n        if (!this.ready) return html``;\n        return html`\n            <sp-theme theme=\"spectrum\" color=\"light\" scale=\"large\">\n                ${\n                    this.#mobileAndTablet.matches\n                        ? this.mobileLayout\n                        : this.desktopLayout\n                }\n                <slot name=\"merch-whats-included\"></slot>\n            </div>\n        `;\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n        this.style.setProperty('mod-tabs-font-weight', 600);\n        this.addEventListener(EVENT_MERCH_CARD_READY, this.merchTwpReady);\n        this.subscriptionPanel.addEventListener(\n            EVENT_OFFER_SELECTED,\n            this.#handleOfferSelected\n        );\n        this.addEventListener(\n            EVENT_MERCH_QUANTITY_SELECTOR_CHANGE,\n            this.handleQuantityChange\n        );\n        this.whatsIncludedLink?.addEventListener('click', this.handleWhatsIncludedClick);\n    }\n\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        this.removeEventListener(EVENT_MERCH_CARD_READY, this.merchTwpReady);\n        this.subscriptionPanel.removeEventListener(\n            EVENT_OFFER_SELECTED,\n            this.#handleOfferSelected\n        );\n        this.whatsIncludedLink?.removeEventListener('click', this.handleWhatsIncludedClick);\n    }\n\n    handleOfferSelected(event) {\n        this.log.debug('Selecting plan type', event.target.planType);\n        this.selectedTabPanel.card.offerSelect.selectFromPlanType(\n            event.target.planType\n        );\n        this.requestUpdate();\n    }\n\n    handleQuantityChange(event) {\n        if (!this.selectedTabPanel) return;\n        this.selectedTabPanel.card.quantitySelect.defaultValue =\n            event.detail.option;\n        this.requestUpdate();\n    }\n\n    // TODO add suffix to getters for element for easy distinction?\n    get cards() {\n        // only cards with a slot are considered valid.\n        return this.querySelectorAll('merch-card[slot]');\n    }\n\n    get cciCards() {\n        return this.querySelectorAll('merch-card[slot=\"individuals\"]');\n    }\n\n    get cctCards() {\n        return this.querySelectorAll('merch-card[slot=\"business\"]');\n    }\n\n    get cceCards() {\n        return this.querySelectorAll('merch-card[slot=\"education\"]');\n    }\n\n    get subscriptionPanel() {\n        return this.querySelector('merch-subscription-panel');\n    }\n\n    get tabElement() {\n        return this.shadowRoot.querySelector('sp-tabs');\n    }\n\n    get whatsIncludedLink() {\n        return this.querySelector('merch-card .merch-whats-included');\n    }\n\n    get whatsIncluded() {\n        return this.querySelector('[slot=\"merch-whats-included\"]');\n    }\n\n    selectCard(card, force = false) {\n        let selectedCard = this.selectedTabPanel.card;\n        if (force || !selectedCard) {\n            // on tab change we select the card only if no card is selected already.\n            if (selectedCard) {\n                selectedCard.selected = undefined;\n            }\n            selectedCard = card;\n            selectedCard.selected = true;\n            this.selectedTabPanel.card = selectedCard;\n            this.log.debug(\n                'Selecting card',\n                this.selectedTabPanel.value,\n                selectedCard.title\n            );\n        }\n        selectedCard.focus();\n\n        this.subscriptionPanel.quantitySelect?.remove();\n        const quantitySelect = selectedCard.quantitySelect?.cloneNode(true);\n        if (quantitySelect) {\n            this.subscriptionPanel.appendChild(quantitySelect);\n        }\n        const offerSelect = selectedCard.offerSelect.cloneNode(true);\n        offerSelect.setAttribute('variant', 'subscription-options');\n        // select property of the web component is not cloned.\n        offerSelect.selectOffer(\n            offerSelect.querySelector('merch-offer[aria-selected]')\n        );\n        this.subscriptionPanel.offerSelect?.remove();\n        this.subscriptionPanel.appendChild(offerSelect);\n        this.subscriptionPanel.requestUpdate();\n    }\n\n    handleWhatsIncludedClick(event) {\n        event.preventDefault();\n        this.whatsIncluded?.classList.toggle('hidden');\n    }\n\n    async processCards() {\n        [...this.querySelectorAll('merch-card')].forEach((card, i) => {\n            const { customerSegment, marketSegment } = card.offerSelect;\n            if (customerSegment === 'INDIVIDUAL') {\n                if (marketSegment === 'COM') {\n                    card.setAttribute('slot', 'individuals');\n                } else if (marketSegment === 'EDU') {\n                    card.setAttribute('slot', 'education');\n                }\n            } else if (customerSegment === 'TEAM') {\n                card.setAttribute('slot', 'business');\n            }\n            card.addEventListener('click', () => this.selectCard(card, true));\n        });\n        this.ready = true;\n        this.requestUpdate();\n        await this.updateComplete;\n        await this.tabElement.updateComplete;\n        this.selectCard(this.firstCardInSelectedTab, true);\n    }\n\n    merchTwpReady() {\n        if (\n            // wait for all merch-offer-selects to be ready\n            this.querySelector('merch-card merch-offer-select:not([plan-type])')\n        )\n            return;\n        this.processCards();\n    }\n}\n\nwindow.customElements.define(TAG_NAME, MerchTwpD2P);\n", "/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport type { ReactiveController, ReactiveElement } from 'lit';\n\nexport const DARK_MODE = '(prefers-color-scheme: dark)';\nexport const IS_MOBILE =\n    '(max-width: 700px) and (hover: none) and (pointer: coarse), (max-height: 700px) and (hover: none) and (pointer: coarse)';\n\nexport class MatchMediaController implements ReactiveController {\n    key = Symbol('match-media-key');\n\n    matches = false;\n\n    protected host: ReactiveElement;\n\n    protected media: MediaQueryList;\n\n    constructor(host: ReactiveElement, query: string) {\n        this.host = host;\n        this.host.addController(this);\n        this.media = window.matchMedia(query);\n        this.matches = this.media.matches;\n        this.onChange = this.onChange.bind(this);\n        host.addController(this);\n    }\n\n    public hostConnected(): void {\n        this.media?.addEventListener('change', this.onChange);\n    }\n\n    public hostDisconnected(): void {\n        this.media?.removeEventListener('change', this.onChange);\n    }\n\n    protected onChange(event: MediaQueryListEvent): void {\n        if (this.matches === event.matches) return;\n        this.matches = event.matches;\n        this.host.requestUpdate(this.key, !this.matches);\n    }\n}\n", "import { css } from 'lit';\n\nexport const styles = css`\n    :host {\n        display: flex;\n        box-sizing: border-box;\n        width: 100%;\n        max-width: 972px;\n        background-color: #f8f8f8;\n    }\n\n    sp-theme {\n        display: contents;\n    }\n\n    ::slotted(p) {\n        margin: 0;\n    }\n\n    .cards {\n        display: flex;\n        gap: var(--consonant-merch-spacing-xs);\n    }\n\n    #backButton {\n        position: absolute;\n        top: 12px;\n        left: 12px;\n        border-width: 0;\n    }\n\n    ::slotted([slot='detail-xl']) {\n        font-size: 18px;\n        font-weight: bold;\n        color: #2c2c2c;\n        margin: 0;\n    }\n\n    ::slotted([slot='merch-whats-included']) {\n        align-self: auto;\n        width: 100%;\n        position: absolute;\n        background: #fff;\n        height: 100%;\n        padding: 30px;\n        border-radius: 10px;\n        box-sizing: border-box;\n    }\n\n    ::slotted([slot$='-footer']) {\n        flex-basis: 100%;\n    }\n\n    ::slotted([slot='merch-whats-included'].hidden) {\n        display: none;\n    }\n\n    /* Mobile */\n\n    .mobile {\n        box-sizing: border-box;\n        display: flex;\n        flex-direction: column;\n        flex: 1;\n        align-items: center;\n        max-height: 100vh;\n        padding: 30px 30px 0 30px;\n        width: 100vw;\n        gap: 16px;\n    }\n\n    .mobile ::slotted([slot='detail-xl']) {\n        max-width: 455px;\n        width: 100%;\n    }\n\n    .mobile[data-step='2'] {\n        padding-top: 54px;\n        background-color: #f5f5f5; /* make a variable */\n    }\n\n    #card-icons-title {\n        display: flex;\n        align-items: center;\n        gap: 8px;\n        align-self: center;\n        max-width: 400px;\n        width: 100%;\n    }\n\n    #card-icons-title h3 {\n        margin: 0;\n        font-size: 18px;\n    }\n\n    .mobile sp-tabs {\n        width: 100%;\n        max-width: 455px;\n    }\n\n    .mobile sp-tab-panel {\n        height: calc(100vh - 268px);\n        flex: 1;\n    }\n\n    .mobile .cards {\n        padding-top: 2px;\n        align-items: center;\n        flex: 1;\n        flex-direction: column;\n        overflow-y: auto;\n        padding-bottom: 50px;\n    }\n\n    .mobile #continue {\n        align-items: center;\n        width: 100%;\n        height: 120px;\n        display: flex;\n        gap: 16px;\n        flex-direction: column;\n        place-content: center;\n        position: fixed;\n        bottom: 0;\n        box-shadow: 0px -8px 10px -5px rgba(112, 112, 112, 0.1);\n        background-color: #fff;\n        padding: 0 30px;\n    }\n\n    #continue sp-button {\n        width: 80%;\n        min-width: 110px;\n        max-width: 300px;\n    }\n\n    .mobile ::slotted(merch-card) {\n        width: 300px;\n    }\n\n    .mobile #content {\n        display: flex;\n        flex: 1;\n        flex-direction: column;\n        padding: 30px 30px 0 30px;\n    }\n\n    .mobile[data-step='2'] sp-tabs {\n        display: none;\n    }\n\n    .desktop {\n        display: flex;\n        width: 972px;\n        min-height: 680px;\n        flex: 1;\n    }\n\n    .desktop .cards {\n        flex-wrap: wrap;\n    }\n\n    .desktop #content {\n        display: flex;\n        flex: 1;\n        flex-direction: column;\n        padding: 30px 30px 0 30px;\n    }\n\n    .desktop ::slotted([slot='detail-xl']) {\n        font-size: 20px;\n    }\n\n    .desktop aside {\n        background-color: #f5f5f5;\n        border-radius: 8px; /* not sure if necessary */\n        display: flex;\n        flex-direction: column;\n        width: 360px;\n        box-sizing: border-box;\n        padding: 0 30px 0 30px;\n    }\n\n    .desktop sp-tabs {\n        margin: 12px 0 30px 0;\n    }\n\n    sp-tab-panel {\n        padding-top: 20px;\n    }\n\n    .desktop ::slotted(merch-card) {\n        width: 268px;\n    }\n\n    .desktop ::slotted(merch-subscription-panel) {\n        margin-top: 40px;\n    }\n\n    .desktop #continue {\n        position: absolute;\n        bottom: 30px;\n        right: 30px;\n    }\n`;\n", "export const SPECTRUM_MOBILE_LANDSCAPE = '(max-width: 700px)';\nexport const MOBILE_LANDSCAPE = '(max-width: 767px)';\nexport const TABLET_DOWN = '(max-width: 1200px)';\nexport const TABLET_UP = '(min-width: 768px)';\nexport const DESKTOP_UP = '(min-width: 1200px)';\nexport const LARGE_DESKTOP = '(min-width: 1600px)';\n", "/**\n * Common namespace prefix for CSS classes and DOM event types.\n * @see https://git.corp.adobe.com/wcms/team/discussions/27\n */\nexport const NAMESPACE = 'merch';\n/**\n * This CSS class name is used to:\n * - show only selected offer on a card connected to a subscription panel\n * - TBD\n */\nexport const CLASS_NAME_HIDDEN = 'hidden';\n/**\n * Event type dispatched by the commenrce service whenever it is ready.\n * Should be in sync with `packages/commerce/src/constants.js`.\n */\nexport const EVENT_TYPE_READY = 'wcms:commerce:ready';\n/**\n * Tag name of the commerce service component.\n * Should be in sync with `packages/commerce/src/constants.js`.\n */\nexport const TAG_NAME_SERVICE = 'wcms-commerce';\n\n/** Event to dispatch when a merch-offer is ready */\nexport const EVENT_MERCH_OFFER_READY = 'merch-offer:ready';\n\n/** Event to dispatch when all the offers of a merch-offer-select sont ready */\nexport const EVENT_MERCH_OFFER_SELECT_READY = 'merch-offer-select:ready';\n\n/** Event to dispatch when a merch-card is ready */\nexport const EVENT_MERCH_CARD_READY = 'merch-card:ready';\n\nexport const EVENT_OFFER_SELECTED = 'merch-offer:selected';\n\nexport const EVENT_MERCH_STOCK_CHANGE = 'merch-stock:change';\n\nexport const EVENT_MERCH_QUANTITY_SELECTOR_CHANGE =\n    'merch-quantity-selector:change';\n"],
  "mappings": "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",
  "names": ["LitElement", "html", "MatchMediaController", "host", "query", "_a", "event", "css", "styles", "TABLET_DOWN", "EVENT_MERCH_CARD_READY", "EVENT_OFFER_SELECTED", "EVENT_MERCH_QUANTITY_SELECTOR_CHANGE", "TAG_NAME", "MerchTwpD2P", "LitElement", "styles", "#log", "#cardIcons", "#handleOfferSelected", "#mobileAndTablet", "MatchMediaController", "TABLET_DOWN", "html", "event", "el", "EVENT_MERCH_CARD_READY", "EVENT_OFFER_SELECTED", "EVENT_MERCH_QUANTITY_SELECTOR_CHANGE", "card", "force", "selectedCard", "quantitySelect", "offerSelect", "i", "customerSegment", "marketSegment"]
}

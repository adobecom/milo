{
  "version": 3,
  "sources": ["../../features/personalization/personalization.js"],
  "sourcesContent": ["/* eslint-disable no-underscore-dangle */\n/* eslint-disable no-console */\n\nimport { createTag, getConfig, loadLink, loadScript, localizeLink } from '../../utils/utils.js';\nimport { getFederatedUrl } from '../../utils/federated.js';\n\n/* c8 ignore start */\nconst PHONE_SIZE = window.screen.width < 550 || window.screen.height < 550;\nconst safariIpad = navigator.userAgent.includes('Macintosh') && navigator.maxTouchPoints > 1;\nexport const PERSONALIZATION_TAGS = {\n  all: () => true,\n  chrome: () => navigator.userAgent.includes('Chrome') && !navigator.userAgent.includes('Edg'),\n  firefox: () => navigator.userAgent.includes('Firefox'),\n  safari: () => navigator.userAgent.includes('Safari') && !navigator.userAgent.includes('Chrome'),\n  edge: () => navigator.userAgent.includes('Edg'),\n  android: () => navigator.userAgent.includes('Android'),\n  ios: () => /iPad|iPhone|iPod/.test(navigator.userAgent) || safariIpad,\n  windows: () => navigator.userAgent.includes('Windows'),\n  mac: () => navigator.userAgent.includes('Macintosh') && !safariIpad,\n  'mobile-device': () => safariIpad\n    || /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|Touch/i\n      .test(navigator.userAgent),\n  phone: () => PERSONALIZATION_TAGS['mobile-device']() && PHONE_SIZE,\n  tablet: () => PERSONALIZATION_TAGS['mobile-device']() && !PHONE_SIZE,\n  desktop: () => !PERSONALIZATION_TAGS['mobile-device'](),\n  loggedout: () => !window.adobeIMS?.isSignedInUser(),\n  loggedin: () => !!window.adobeIMS?.isSignedInUser(),\n};\nconst PERSONALIZATION_KEYS = Object.keys(PERSONALIZATION_TAGS);\n/* c8 ignore stop */\n\nconst CLASS_EL_DELETE = 'p13n-deleted';\nconst CLASS_EL_REPLACE = 'p13n-replaced';\nconst COLUMN_NOT_OPERATOR = 'not ';\nconst TARGET_EXP_PREFIX = 'target-';\nconst INLINE_HASH = '_inline';\nconst MARTECH_RETURNED_EVENT = 'martechReturned';\nconst PAGE_URL = new URL(window.location.href);\nconst FLAGS = {\n  all: 'all',\n  includeFragments: 'include-fragments',\n};\nlet isPostLCP = false;\n\nexport const TRACKED_MANIFEST_TYPE = 'personalization';\n\n// Replace any non-alpha chars except comma, space, ampersand and hyphen\nconst RE_KEY_REPLACE = /[^a-z0-9\\- _,&=]/g;\n\nconst MANIFEST_KEYS = [\n  'action',\n  'selector',\n  'pagefilter',\n  'page filter',\n  'page filter optional',\n];\n\nconst DATA_TYPE = {\n  JSON: 'json',\n  TEXT: 'text',\n};\n\nconst IN_BLOCK_SELECTOR_PREFIX = 'in-block:';\n\nexport const normalizePath = (p, localize = true) => {\n  let path = p;\n\n  if (!path?.includes('/')) {\n    return path;\n  }\n\n  const config = getConfig();\n  if (path.startsWith('https://www.adobe.com/federal/')) {\n    return getFederatedUrl(path);\n  }\n\n  if (path.startsWith(config.codeRoot)\n    || path.includes('.hlx.')\n    || path.includes('.aem.')\n    || path.includes('.adobe.')) {\n    try {\n      const url = new URL(path);\n      const firstFolder = url.pathname.split('/')[1];\n      if (!localize\n        || config.locale.ietf === 'en-US'\n        || url.hash.includes('#_dnt')\n        || firstFolder in config.locales\n        || path.includes('.json')) {\n        path = url.pathname;\n      } else {\n        path = `${config.locale.prefix}${url.pathname}`;\n      }\n    } catch (e) { /* return path below */ }\n  } else if (!path.startsWith('http') && !path.startsWith('/')) {\n    path = `/${path}`;\n  }\n  return path;\n};\n\nexport const getFileName = (path) => path?.split('/').pop();\n\nconst isInLcpSection = (el) => {\n  const lcpSection = document.querySelector('body > main > div');\n  return lcpSection === el || lcpSection?.contains(el);\n};\n\nconst GLOBAL_CMDS = [\n  'insertscript',\n  'replacepage',\n  'updatemetadata',\n  'useblockcode',\n];\n\nconst CREATE_CMDS = {\n  insertafter: 'afterend',\n  insertbefore: 'beforebegin',\n  prepend: 'afterbegin',\n  append: 'beforeend',\n};\n\nconst COMMANDS_KEYS = {\n  remove: 'remove',\n  replace: 'replace',\n};\n\nfunction addIds(el, manifestId, targetManifestId) {\n  if (manifestId) el.dataset.manifestId = manifestId;\n  if (targetManifestId) el.dataset.adobeTargetTestid = targetManifestId;\n}\n\nfunction getSelectorType(selector) {\n  const sel = selector.toLowerCase().trim();\n  if (sel.startsWith('/') || sel.startsWith('http')) return 'fragment';\n  return 'other';\n}\n\nexport function replacePlaceholders(value, ph) {\n  const placeholders = ph || getConfig().placeholders;\n  if (!placeholders) return value;\n  let val = value;\n  const matches = val.match(/{{(.*?)}}/g);\n  if (!matches) return val;\n  matches.forEach((match) => {\n    const key = match.replace(/{{|}}/g, '').trim();\n    if (placeholders[key]) val = val.replace(match, placeholders[key]);\n  });\n  return val;\n}\n\nconst getUpdatedHref = (el, content, action) => {\n  const href = el.getAttribute('href');\n  const newContent = replacePlaceholders(content);\n  if (action === 'insertafter' || action === 'append') return `${href}${newContent}`;\n  if (action === 'insertbefore' || action === 'prepend') return `${newContent}${href}`;\n  return newContent;\n};\n\nconst createFrag = (el, action, content, manifestId, targetManifestId) => {\n  if (action === 'replace') el.classList.add(CLASS_EL_DELETE, CLASS_EL_REPLACE);\n  let href = content;\n  try {\n    const { pathname, search, hash } = new URL(content);\n    href = `${pathname}${search}${hash}`;\n  } catch {\n    // ignore\n  }\n  const a = createTag('a', { href }, content);\n  addIds(a, manifestId, targetManifestId);\n  const frag = createTag('p', undefined, a);\n  const isDelayedModalAnchor = /#.*delay=/.test(href);\n  if (isDelayedModalAnchor) frag.classList.add('hide-block');\n  if (isInLcpSection(el)) {\n    loadLink(`${localizeLink(a.href)}.plain.html`, { as: 'fetch', crossorigin: 'anonymous', rel: 'preload' });\n  }\n  return frag;\n};\n\nexport const createContent = (el, { content, manifestId, targetManifestId, action, modifiers }) => {\n  if (action === 'replace') {\n    addIds(el, manifestId, targetManifestId);\n  }\n  if (el?.nodeName === 'A' && modifiers?.includes('href')) {\n    el.setAttribute('href', getUpdatedHref(el, content, action));\n    addIds(el, manifestId, targetManifestId);\n    return el;\n  }\n  if (getSelectorType(content) !== 'fragment') {\n    const newContent = replacePlaceholders(content);\n\n    if (action === 'replace') {\n      el.innerHTML = newContent;\n\n      return el;\n    }\n\n    const container = createTag('div', {}, newContent);\n    addIds(container, manifestId, targetManifestId);\n    return container;\n  }\n\n  const frag = createFrag(el, action, content, manifestId, targetManifestId);\n  addIds(frag, manifestId, targetManifestId);\n  if (el?.parentElement.nodeName !== 'MAIN') return frag;\n  return createTag('div', undefined, frag);\n};\n\nconst COMMANDS = {\n  [COMMANDS_KEYS.remove]: (el, { content, manifestId }) => {\n    if (content === 'false') return;\n    if (manifestId) {\n      el.dataset.removedManifestId = manifestId;\n      return;\n    }\n    el.classList.add(CLASS_EL_DELETE);\n  },\n  [COMMANDS_KEYS.replace]: (el, cmd) => {\n    if (!el || el.classList.contains(CLASS_EL_REPLACE)) return;\n    el.insertAdjacentElement(\n      'beforebegin',\n      createContent(el, cmd),\n    );\n  },\n};\n\nconst log = (...msg) => {\n  const config = getConfig();\n  if (config.mep?.preview) console.log(...msg);\n};\n\nconst fetchData = async (url, type = DATA_TYPE.JSON) => {\n  try {\n    const resp = await fetch(normalizePath(url));\n    if (!resp.ok) {\n      /* c8 ignore next 5 */\n      if (resp.status === 404) {\n        throw new Error('File not found');\n      }\n      throw new Error(`Invalid response: ${resp.status} ${resp.statusText}`);\n    }\n    return await resp[type]();\n  } catch (e) {\n    /* c8 ignore next 3 */\n    log(`Error loading content: ${url}`, e.message || e);\n  }\n  return null;\n};\n\nconst getBlockProps = (fVal, config, origin) => {\n  let val = fVal;\n  if (val?.includes('\\\\')) val = val?.split('\\\\').join('/');\n  if (!val?.startsWith('/')) val = `/${val}`;\n  const blockSelector = val?.split('/').pop();\n\n  if (val.startsWith('/libs/')) {\n    /* c8 ignore next 1 */\n    val = `${config.miloLibs || config.codeRoot}${val.replace('/libs', '')}`;\n  } else {\n    val = `${origin}${val}`;\n  }\n\n  return { blockSelector, blockTarget: val };\n};\n\nconst consolidateArray = (arr, prop, existing = []) => arr\n  .reduce((results, i) => [...results, ...i[prop] || []], existing);\n\nconst consolidateObjects = (arr, prop, existing = {}) => arr.reduce((propMap, item) => {\n  item[prop]?.forEach((i) => {\n    const { selector, val } = i;\n    if (prop === 'blocks') {\n      propMap[selector] = val;\n      return;\n    }\n\n    if (selector in propMap) return;\n    const action = {\n      action: i.action,\n      fragment: val,\n      selector,\n      manifestPath: item.manifestPath,\n      manifestId: i.manifestId,\n      targetManifestId: i.targetManifestId,\n    };\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key in propMap) {\n      if (propMap[key].fragment === selector) propMap[key] = action;\n    }\n    propMap[selector] = action;\n  });\n  return { ...existing, ...propMap };\n}, {});\n\nexport const matchGlob = (searchStr, inputStr) => {\n  const pattern = searchStr.replace(/\\*\\*/g, '.*');\n  const reg = new RegExp(`^${pattern}(\\\\.html)?$`, 'i'); // devtool bug needs this backtick: `\n  return reg.test(inputStr);\n};\n\nexport async function replaceInner(path, element) {\n  if (!path || !element) return false;\n  let plainPath = path.endsWith('/') ? `${path}index` : path;\n  plainPath = plainPath.endsWith('.plain.html') ? plainPath : `${plainPath}.plain.html`;\n  const html = await fetchData(plainPath, DATA_TYPE.TEXT);\n  if (!html) return false;\n\n  element.innerHTML = html;\n  const { decorateArea } = getConfig();\n  if (decorateArea) decorateArea(element);\n  return true;\n}\n/* c8 ignore stop */\n\nconst setMetadata = (metadata) => {\n  const { selector, val } = metadata;\n  if (!selector || !val) return;\n  const propName = selector.startsWith('og:') ? 'property' : 'name';\n  let metaEl = document.querySelector(`meta[${propName}=\"${selector}\"]`);\n  if (!metaEl) {\n    metaEl = createTag('meta', { [propName]: selector });\n    document.head.append(metaEl);\n  }\n  metaEl.setAttribute('content', val);\n};\n\nfunction toLowerAlpha(str) {\n  const s = str.toLowerCase();\n  return s.replace(RE_KEY_REPLACE, '');\n}\n\nfunction normalizeKeys(obj) {\n  return Object.keys(obj).reduce((newObj, key) => {\n    newObj[toLowerAlpha(key)] = obj[key];\n    return newObj;\n  }, {});\n}\n\nfunction registerInBlockActions(command) {\n  const blockAndSelector = command.selector.substring(IN_BLOCK_SELECTOR_PREFIX.length)\n    .trim().split(/\\s+/);\n  const [blockName] = blockAndSelector;\n\n  const config = getConfig();\n  config.mep.inBlock ??= {};\n  config.mep.inBlock[blockName] ??= {};\n\n  let blockSelector;\n  if (blockAndSelector.length === 1) delete command.selector;\n  if (blockAndSelector.length > 1) {\n    blockSelector = blockAndSelector.slice(1).join(' ');\n    command.selector = blockSelector;\n    if (getSelectorType(blockSelector) === 'fragment') {\n      if (blockSelector.includes('/federal/')) blockSelector = getFederatedUrl(blockSelector);\n      if (command.content.includes('/federal/')) command.content = getFederatedUrl(command.content);\n      config.mep.inBlock[blockName].fragments ??= {};\n      const { fragments } = config.mep.inBlock[blockName];\n      delete command.selector;\n      if (blockSelector in fragments) return;\n\n      // eslint-disable-next-line no-restricted-syntax\n      for (const key in fragments) {\n        if (fragments[key].content === blockSelector) fragments[key] = command;\n      }\n      fragments[blockSelector] = command;\n\n      blockSelector = normalizePath(blockSelector);\n      // eslint-disable-next-line no-restricted-syntax\n      for (const key in fragments) {\n        if (fragments[key].content === blockSelector) fragments[key] = command;\n      }\n      fragments[blockSelector] = command;\n      return;\n    }\n  }\n  config.mep.inBlock[blockName].commands ??= [];\n  config.mep.inBlock[blockName].commands.push(command);\n}\n\nconst updateEndNumber = (endNumber, term) => (endNumber\n  ? term.replace(endNumber, `:nth-child(${endNumber})`)\n  : term);\nfunction modifySelectorTerm(termParam) {\n  let term = termParam;\n  const specificSelectors = {\n    section: 'main > div',\n    'primary-cta': 'strong a',\n    'secondary-cta': 'em a',\n    'action-area': '*:has(> em a, > strong a)',\n    'any-marquee-section': 'main > div:has([class*=\"marquee\"])',\n    'any-marquee': '[class*=\"marquee\"]',\n    'any-header': ':is(h1, h2, h3, h4, h5, h6)',\n  };\n  const otherSelectors = ['row', 'col'];\n  const htmlEls = [\n    'html', 'body', 'header', 'footer', 'main',\n    'div', 'a', 'p', 'strong', 'em', 'picture', 'source', 'img', 'h',\n    'ul', 'ol', 'li',\n  ];\n  const startTextMatch = term.match(/^[a-zA-Z/./-]*/);\n  const startText = startTextMatch ? startTextMatch[0].toLowerCase() : '';\n  const startTextPart1 = startText.split(/\\.|:/)[0];\n  const endNumberMatch = term.match(/[0-9]*$/);\n  const endNumber = endNumberMatch && startText.match(/^[a-zA-Z]/) ? endNumberMatch[0] : '';\n  if (!startText || htmlEls.includes(startText)) return term;\n  if (otherSelectors.includes(startText)) {\n    term = term.replace(startText, '> div');\n    term = updateEndNumber(endNumber, term);\n    return term;\n  }\n  if (Object.keys(specificSelectors).includes(startTextPart1)) {\n    term = term.replace(startTextPart1, specificSelectors[startTextPart1]);\n    term = updateEndNumber(endNumber, term);\n    return term;\n  }\n\n  if (!startText.startsWith('.')) term = `.${term}`;\n  if (endNumber) {\n    term = term.replace(endNumber, '');\n    term = `${term}:nth-child(${endNumber} of ${term})`;\n  }\n  return term;\n}\nfunction getModifiers(selector) {\n  let sel = selector;\n  const modifiers = [];\n  const flags = sel.split(/\\s+#_/);\n  if (flags.length) {\n    sel = flags.shift();\n    flags.forEach((flag) => {\n      flag.split(/_|#_/).forEach((mod) => modifiers.push(mod.toLowerCase().trim()));\n    });\n  }\n  return { sel, modifiers };\n}\nexport function modifyNonFragmentSelector(selector) {\n  const { sel, modifiers } = getModifiers(selector);\n  return {\n    modifiedSelector: sel\n      .split('>').join(' > ')\n      .split(',').join(' , ')\n      .replaceAll(/main\\s*>?\\s*(section\\d*)/gi, '$1')\n      .split(/\\s+/)\n      .map(modifySelectorTerm)\n      .join(' ')\n      .trim(),\n    modifiers,\n  };\n}\n\nfunction getSelectedElements(sel, rootEl, forceRootEl) {\n  const root = forceRootEl ? rootEl : document;\n  const selector = sel.trim();\n  if (!selector) return {};\n\n  if (getSelectorType(selector) === 'fragment') {\n    try {\n      const fragments = root.querySelectorAll(\n        `a[href*=\"${normalizePath(selector, false)}\"], a[href*=\"${normalizePath(selector, true)}\"]`,\n      );\n      return { els: fragments, modifiers: [FLAGS.all, FLAGS.includeFragments] };\n    } catch (e) {\n      /* c8 ignore next 2 */\n      return { els: [], modifiers: [] };\n    }\n  }\n  const { modifiedSelector, modifiers } = modifyNonFragmentSelector(selector);\n  let els;\n  try {\n    els = root.querySelectorAll(modifiedSelector);\n  } catch (e) {\n  /* eslint-disable-next-line no-console */\n    log('Invalid selector: ', selector);\n    return null;\n  }\n  if (modifiers.includes(FLAGS.all) || !els.length) return { els, modifiers };\n  els = [els[0]];\n  return { els, modifiers };\n}\nconst addHash = (url, newHash) => {\n  if (!newHash) return url;\n  try {\n    const { origin, pathname, search } = new URL(url);\n    return `${origin}${pathname}${search}#${newHash}`;\n  } catch (e) {\n    return `${url}#${newHash}`;\n  }\n};\n\nconst setDataIdOnChildren = (sections, id, value) => {\n  [...sections[0].children].forEach(\n    (child) => (child.dataset[id] = value),\n  );\n};\n\nexport const updateFragDataProps = (a, inline, sections, fragment) => {\n  const { manifestId, adobeTargetTestid } = a.dataset;\n  if (inline) {\n    if (manifestId) setDataIdOnChildren(sections, 'manifestId', manifestId);\n    if (adobeTargetTestid) setDataIdOnChildren(sections, 'adobeTargetTestid', adobeTargetTestid);\n  } else {\n    addIds(fragment, manifestId, adobeTargetTestid);\n  }\n};\n\nexport const deleteMarkedEls = (rootEl = document) => {\n  [...rootEl.querySelectorAll(`.${CLASS_EL_DELETE}`)]\n    .forEach((el) => el.remove());\n};\n\nexport function handleCommands(\n  commands,\n  rootEl = document,\n  forceInline = false,\n  forceRootEl = false,\n) {\n  const section1 = document.querySelector('main > div');\n  commands.forEach((cmd) => {\n    const { action, content, selector } = cmd;\n    cmd.content = forceInline ? addHash(content, INLINE_HASH) : content;\n    if (selector.startsWith(IN_BLOCK_SELECTOR_PREFIX)) {\n      registerInBlockActions(cmd);\n      cmd.selectorType = IN_BLOCK_SELECTOR_PREFIX;\n      return;\n    }\n    const { els, modifiers } = getSelectedElements(selector, rootEl, forceRootEl);\n    cmd.modifiers = modifiers;\n\n    els?.forEach((el) => {\n      if (!el\n        || (!(action in COMMANDS) && !(action in CREATE_CMDS))\n        || (rootEl && !rootEl.contains(el))\n        || (isPostLCP && section1?.contains(el))) return;\n\n      if (action in COMMANDS) {\n        COMMANDS[action](el, cmd);\n        return;\n      }\n      const insertAnchor = getSelectorType(selector) === 'fragment' ? el.parentElement : el;\n      insertAnchor?.insertAdjacentElement(\n        CREATE_CMDS[action],\n        createContent(el, cmd),\n      );\n    });\n    if ((els.length && !cmd.modifiers.includes(FLAGS.all))\n      || !cmd.modifiers.includes(FLAGS.includeFragments)) {\n      cmd.completed = true;\n    }\n  });\n  deleteMarkedEls(rootEl);\n  return commands.filter((cmd) => !cmd.completed\n    && cmd.selectorType !== IN_BLOCK_SELECTOR_PREFIX);\n}\n\nconst getVariantInfo = (line, variantNames, variants, manifestPath, fTargetId) => {\n  const config = getConfig();\n  let manifestId = getFileName(manifestPath);\n  let targetId = manifestId.replace('.json', '');\n  if (fTargetId) targetId = fTargetId;\n  if (!config.mep?.preview) manifestId = false;\n  // retro support\n  const action = line.action?.toLowerCase()\n    .replace('content', '').replace('fragment', '').replace('tosection', '');\n  if (!action) {\n    log('Row found with empty action field: ', line);\n    return;\n  }\n  const pageFilter = line['page filter'] || line['page filter optional'];\n  const { selector } = line;\n\n  if (pageFilter && !matchGlob(pageFilter, new URL(window.location).pathname)) return;\n\n  if (!config.mep?.preview) manifestId = false;\n  const { origin } = PAGE_URL;\n  variantNames.forEach((vn) => {\n    const targetManifestId = vn.startsWith(TARGET_EXP_PREFIX) ? targetId : false;\n    if (!line[vn] || line[vn].toLowerCase() === 'false') return;\n\n    const variantInfo = {\n      action,\n      selector,\n      pageFilter,\n      content: line[vn],\n      selectorType: getSelectorType(selector),\n      manifestId,\n      targetManifestId,\n    };\n\n    if (action in COMMANDS && variantInfo.selectorType === 'fragment') {\n      variants[vn].fragments.push({\n        selector: normalizePath(variantInfo.selector.split(' #_')[0]),\n        val: normalizePath(line[vn]),\n        action,\n        manifestId,\n        targetManifestId,\n      });\n    } else if (GLOBAL_CMDS.includes(action)) {\n      variants[vn][action] = variants[vn][action] || [];\n\n      if (action === 'useblockcode') {\n        const { blockSelector, blockTarget } = getBlockProps(line[vn], config, origin);\n        variants[vn][action].push({\n          selector: blockSelector,\n          val: blockTarget,\n          pageFilter,\n          manifestId,\n          targetManifestId,\n        });\n      } else {\n        variants[vn][action].push({\n          selector: normalizePath(selector),\n          val: normalizePath(line[vn]),\n          pageFilter,\n          manifestId,\n          targetManifestId,\n        });\n      }\n    } else if (action in COMMANDS || action in CREATE_CMDS) {\n      variants[vn].commands.push(variantInfo);\n    }\n  });\n};\n\nexport function parseManifestVariants(data, manifestPath, targetId) {\n  if (!data?.length) return null;\n\n  const manifestConfig = {};\n  const experiences = data.map((d) => normalizeKeys(d));\n\n  try {\n    const variants = {};\n    const variantNames = Object.keys(experiences[0])\n      .filter((vn) => !MANIFEST_KEYS.includes(vn));\n\n    variantNames.forEach((vn) => {\n      variants[vn] = { commands: [], fragments: [] };\n    });\n\n    experiences.forEach((line) => {\n      getVariantInfo(line, variantNames, variants, manifestPath, targetId);\n    });\n\n    manifestConfig.variants = variants;\n    manifestConfig.variantNames = variantNames;\n    const config = getConfig();\n    if (!config.mep?.preview) manifestConfig.manifestId = false;\n\n    return manifestConfig;\n  } catch (e) {\n    /* c8 ignore next 3 */\n    log('error parsing personalization manifestConfig:', e, experiences);\n  }\n  return null;\n}\n\nexport async function createMartechMetadata(placeholders, config, column) {\n  if (config.locale.ietf === 'en-US') return;\n\n  await import('../../martech/attributes.js').then(({ processTrackingLabels }) => {\n    config.mep.analyticLocalization ??= {};\n\n    placeholders.forEach((item, i) => {\n      const firstRow = placeholders[i];\n      let usValue = firstRow['en-us'] || firstRow.us || firstRow.en || firstRow.key;\n\n      if (!usValue) return;\n\n      usValue = processTrackingLabels(usValue);\n      const translatedValue = processTrackingLabels(item[column]);\n      config.mep.analyticLocalization[translatedValue] = usValue;\n    });\n  });\n}\n\n/* c8 ignore start */\nexport function parsePlaceholders(placeholders, config, selectedVariantName = '') {\n  if (!placeholders?.length || selectedVariantName === 'default') return config;\n  const valueNames = [\n    selectedVariantName.toLowerCase(),\n    config.mep?.geoPrefix,\n    config.locale.region.toLowerCase(),\n    config.locale.ietf.toLowerCase(),\n    ...config.locale.ietf.toLowerCase().split('-'),\n    'value',\n    'other',\n  ];\n  const keys = placeholders?.length ? Object.entries(placeholders[0]) : [];\n  const keyVal = keys.find(([key]) => valueNames.includes(key.toLowerCase()));\n  const key = keyVal?.[0];\n\n  if (key) {\n    const results = placeholders.reduce((res, item) => {\n      res[item.key] = item[key];\n      return res;\n    }, {});\n    config.placeholders = { ...(config.placeholders || {}), ...results };\n  }\n\n  createMartechMetadata(placeholders, config, key);\n\n  return config;\n}\n\nconst checkForParamMatch = (paramStr) => {\n  const [name, val] = paramStr.split('param-')[1].split('=');\n  if (!name) return false;\n  const params = new URLSearchParams(\n    Array.from(PAGE_URL.searchParams, ([key, value]) => [key.toLowerCase(), value?.toLowerCase()]),\n  );\n  const searchParamVal = params.get(name.toLowerCase());\n  if (searchParamVal !== null) {\n    if (val) return val === searchParamVal;\n    return true; // if no val is set, just check for existence of param\n  }\n  return false;\n};\n\nfunction trimNames(arr) {\n  return arr.map((v) => v.trim()).filter(Boolean);\n}\nexport function buildVariantInfo(variantNames) {\n  return variantNames.reduce((acc, name) => {\n    let nameArr = [name];\n    if (!name.startsWith(TARGET_EXP_PREFIX)) nameArr = name.split(',');\n    acc[name] = trimNames(nameArr);\n    acc.allNames = [...acc.allNames, ...trimNames(name.split(/[,&]|\\bnot\\b/))];\n    return acc;\n  }, { allNames: [] });\n}\n\nconst getXLGListURL = (config) => {\n  const sheet = config.env?.name === 'prod' ? 'prod' : 'stage';\n  return `https://www.adobe.com/federal/assets/data/mep-xlg-tags.json?sheet=${sheet}`;\n};\n\nexport const getEntitlementMap = async () => {\n  const config = getConfig();\n  if (config.mep?.entitlementMap) return config.mep.entitlementMap;\n  const entitlementUrl = getXLGListURL(config);\n  const fetchedData = await fetchData(entitlementUrl, DATA_TYPE.JSON);\n  if (!fetchedData) return config.consumerEntitlements || {};\n  const entitlements = {};\n  fetchedData?.data?.forEach((ent) => {\n    const { id, tagname } = ent;\n    entitlements[id] = tagname;\n  });\n  config.mep ??= {};\n  config.mep.entitlementMap = { ...config.consumerEntitlements, ...entitlements };\n  return config.mep.entitlementMap;\n};\n\nexport const getEntitlements = async (data) => {\n  const entitlementMap = await getEntitlementMap();\n\n  return data.flatMap((destination) => {\n    const ents = destination.segments?.flatMap((segment) => {\n      const entMatch = entitlementMap[segment.id];\n      return entMatch ? [entMatch] : [];\n    });\n\n    return ents || [];\n  });\n};\n\nasync function getPersonalizationVariant(manifestPath, variantNames = [], variantLabel = null) {\n  const config = getConfig();\n  if (config.mep?.variantOverride?.[manifestPath]) {\n    return config.mep.variantOverride[manifestPath];\n  }\n\n  const variantInfo = buildVariantInfo(variantNames);\n\n  const entitlementKeys = Object.values(await getEntitlementMap());\n  const hasEntitlementTag = entitlementKeys.some((tag) => variantInfo.allNames.includes(tag));\n\n  let userEntitlements = [];\n  if (hasEntitlementTag) {\n    userEntitlements = await config.entitlements();\n  }\n\n  const hasMatch = (name) => {\n    if (name === '') return true;\n    if (name === variantLabel?.toLowerCase()) return true;\n    if (name.startsWith('param-')) return checkForParamMatch(name);\n    if (userEntitlements?.includes(name)) return true;\n    return PERSONALIZATION_KEYS.includes(name) && PERSONALIZATION_TAGS[name]();\n  };\n\n  const matchVariant = (name) => {\n    if (name.startsWith(TARGET_EXP_PREFIX)) return hasMatch(name);\n    const processedList = name.split('&').map((condition) => {\n      const reverse = condition.trim().startsWith(COLUMN_NOT_OPERATOR);\n      const match = hasMatch(condition.replace(COLUMN_NOT_OPERATOR, '').trim());\n      return reverse ? !match : match;\n    });\n    return !processedList.includes(false);\n  };\n\n  const matchingVariant = variantNames.find((variant) => variantInfo[variant].some(matchVariant));\n  return matchingVariant;\n}\n\nconst createDefaultExperiment = (manifest) => ({\n  disabled: manifest.disabled,\n  event: manifest.event,\n  manifest: manifest.manifestPath,\n  executionOrder: '1-1',\n  selectedVariant: { commands: [], fragments: [] },\n  selectedVariantName: 'default',\n  variantNames: ['all'],\n  variants: {},\n});\n\nexport const addMepAnalytics = (config, header) => {\n  config.mep?.experiments?.forEach((experiment) => {\n    experiment?.selectedVariant?.useblockcode?.forEach(({ selector, targetManifestId }) => {\n      if (selector && targetManifestId) {\n        document.querySelectorAll(`.${selector}`)\n          .forEach((el) => (el.dataset.adobeTargetTestid = targetManifestId));\n      }\n    });\n    if (header) {\n      experiment?.selectedVariant?.updatemetadata?.forEach((updateMetaData) => {\n        if (updateMetaData?.selector === 'gnav-source' && updateMetaData.targetManifestId) {\n          header.dataset.adobeTargetTestid = updateMetaData.targetManifestId;\n        }\n      });\n    }\n  });\n};\nexport async function getManifestConfig(info = {}, variantOverride = false) {\n  const {\n    name,\n    manifestData,\n    manifestPath,\n    manifestUrl,\n    manifestPlaceholders,\n    manifestInfo,\n    variantLabel,\n    disabled,\n    event,\n  } = info;\n  if (disabled && (!variantOverride || !Object.keys(variantOverride).length)) {\n    return createDefaultExperiment(info);\n  }\n  let data = manifestData;\n  if (!data) {\n    const fetchedData = await fetchData(manifestPath, DATA_TYPE.JSON);\n    if (fetchData) data = fetchedData;\n  }\n\n  const persData = data?.experiences?.data || data?.data || data;\n  if (!persData) return null;\n  const infoTab = manifestInfo || data?.info?.data;\n  const infoObj = infoTab?.reduce((acc, item) => {\n    acc[item.key] = item.value;\n    return acc;\n  }, {});\n  const manifestOverrideName = infoObj?.['manifest-override-name']?.toLowerCase();\n  const targetId = name || manifestOverrideName;\n  const manifestConfig = parseManifestVariants(persData, manifestPath, targetId);\n\n  if (!manifestConfig) {\n    /* c8 ignore next 3 */\n    log('Error loading personalization manifestConfig: ', name || manifestPath);\n    return null;\n  }\n  const infoKeyMap = {\n    'manifest-type': ['Personalization', 'Promo', 'Test'],\n    'manifest-execution-order': ['First', 'Normal', 'Last'],\n  };\n  if (infoTab) {\n    manifestConfig.manifestType = infoObj?.['manifest-type']?.toLowerCase();\n    if (manifestOverrideName && manifestConfig.manifestType === TRACKED_MANIFEST_TYPE) {\n      manifestConfig.manifestOverrideName = manifestOverrideName;\n    }\n    const executionOrder = {\n      'manifest-type': 1,\n      'manifest-execution-order': 1,\n    };\n    Object.keys(infoObj).forEach((key) => {\n      if (!infoKeyMap[key]) return;\n      const index = infoKeyMap[key].indexOf(infoObj[key]);\n      executionOrder[key] = index > -1 ? index : 1;\n    });\n    manifestConfig.executionOrder = `${executionOrder['manifest-execution-order']}-${executionOrder['manifest-type']}`;\n  } else {\n    // eslint-disable-next-line prefer-destructuring\n    manifestConfig.manifestType = infoKeyMap['manifest-type'][1];\n    manifestConfig.executionOrder = '1-1';\n  }\n\n  manifestConfig.manifestPath = normalizePath(manifestPath);\n  manifestConfig.selectedVariantName = await getPersonalizationVariant(\n    manifestConfig.manifestPath,\n    manifestConfig.variantNames,\n    variantLabel,\n  );\n\n  manifestConfig.placeholderData = manifestPlaceholders || data?.placeholders?.data;\n  manifestConfig.name = name;\n  manifestConfig.manifest = manifestPath;\n  manifestConfig.manifestUrl = manifestUrl;\n  manifestConfig.disabled = disabled;\n  manifestConfig.event = event;\n  return manifestConfig;\n}\n\nconst normalizeFragPaths = ({ selector, val, action, manifestId, targetManifestId }) => ({\n  selector: normalizePath(selector),\n  val: normalizePath(val),\n  action,\n  manifestId,\n  targetManifestId,\n});\nexport async function categorizeActions(experiment, config) {\n  if (!experiment) return null;\n  const { manifestPath, selectedVariant } = experiment;\n  if (!selectedVariant || selectedVariant === 'default') return { experiment };\n\n  // only one replacepage can be defined\n  const { replacepage } = selectedVariant;\n  // eslint-disable-next-line prefer-destructuring\n  if (selectedVariant.replacepage?.length) config.mep.replacepage = replacepage[0];\n\n  selectedVariant.insertscript?.map((script) => loadScript(script.val));\n  selectedVariant.updatemetadata?.map((metadata) => setMetadata(metadata));\n\n  selectedVariant.fragments &&= selectedVariant.fragments.map(normalizeFragPaths);\n\n  return {\n    manifestPath,\n    experiment,\n    blocks: selectedVariant.useblockcode,\n    fragments: selectedVariant.fragments,\n    commands: selectedVariant.commands,\n  };\n}\n\nfunction parseMepParam(mepParam) {\n  if (!mepParam) return false;\n  const mepObject = Object.create(null);\n  const decodedParam = decodeURIComponent(mepParam);\n  decodedParam.split('---').forEach((item) => {\n    const pair = item.trim().split('--');\n    if (pair.length > 1) {\n      const [manifestPath, selectedVariant] = pair;\n      mepObject[manifestPath] = selectedVariant;\n    }\n  });\n\n  return mepObject;\n}\n\nfunction compareExecutionOrder(a, b) {\n  if (a.executionOrder === b.executionOrder) return 0;\n  return a.executionOrder > b.executionOrder ? 1 : -1;\n}\n\nexport function cleanAndSortManifestList(manifests) {\n  const config = getConfig();\n  const manifestObj = {};\n  let allManifests = manifests;\n  if (config.mep?.experiments) allManifests = [...manifests, ...config.mep.experiments];\n  allManifests.forEach((manifest) => {\n    try {\n      if (!manifest?.manifest) return;\n      if (!manifest.manifestPath) manifest.manifestPath = normalizePath(manifest.manifest);\n      if (manifest.manifestPath in manifestObj) {\n        let fullManifest = manifestObj[manifest.manifestPath];\n        let freshManifest = manifest;\n        if (manifest.name) {\n          fullManifest = manifest;\n          freshManifest = manifestObj[manifest.manifestPath];\n        }\n        freshManifest.name = fullManifest.name;\n        freshManifest.selectedVariantName = fullManifest.selectedVariantName;\n        freshManifest.selectedVariant = freshManifest.variants[freshManifest.selectedVariantName];\n        manifestObj[manifest.manifestPath] = freshManifest;\n      } else {\n        manifestObj[manifest.manifestPath] = manifest;\n      }\n\n      const manifestConfig = manifestObj[manifest.manifestPath];\n      const { selectedVariantName, variantNames, placeholderData } = manifestConfig;\n      if (selectedVariantName && variantNames.includes(selectedVariantName)) {\n        manifestConfig.run = true;\n        manifestConfig.selectedVariantName = selectedVariantName;\n        manifestConfig.selectedVariant = manifestConfig.variants[selectedVariantName];\n      } else {\n        /* c8 ignore next 2 */\n        manifestConfig.selectedVariantName = 'default';\n        manifestConfig.selectedVariant = 'default';\n      }\n\n      parsePlaceholders(placeholderData, getConfig(), manifestConfig.selectedVariantName);\n    } catch (e) {\n      log(`MEP Error parsing manifests: ${e.toString()}`);\n      window.lana?.log(`MEP Error parsing manifests: ${e.toString()}`);\n    }\n  });\n  Object.keys(manifestObj).forEach((key) => {\n    delete manifestObj[key].variants;\n  });\n  return Object.values(manifestObj).sort(compareExecutionOrder);\n}\n\nexport function handleFragmentCommand(command, a) {\n  const { action, fragment, manifestId, targetManifestId } = command;\n  if (action === COMMANDS_KEYS.replace) {\n    a.href = fragment;\n    addIds(a, manifestId, targetManifestId);\n    return fragment;\n  }\n  if (action === COMMANDS_KEYS.remove) {\n    if (manifestId) {\n      a.parentElement.dataset.removedManifestId = manifestId;\n    } else {\n      a.parentElement.remove();\n    }\n  }\n  return false;\n}\n\nexport function parseNestedPlaceholders({ placeholders }) {\n  if (!placeholders) return;\n  Object.entries(placeholders).forEach(([key, value]) => {\n    placeholders[key] = replacePlaceholders(value, placeholders);\n  });\n}\n\nexport async function applyPers(manifests) {\n  if (!manifests?.length) return;\n  let experiments = manifests;\n  const config = getConfig();\n  for (let i = 0; i < experiments.length; i += 1) {\n    experiments[i] = await getManifestConfig(experiments[i], config.mep?.variantOverride);\n  }\n\n  experiments = cleanAndSortManifestList(experiments);\n  parseNestedPlaceholders(config);\n\n  let results = [];\n\n  for (const experiment of experiments) {\n    const result = await categorizeActions(experiment, config);\n    if (result) results.push(result);\n  }\n  results = results.filter(Boolean);\n\n  config.mep.experiments = [...config.mep.experiments, ...experiments];\n  config.mep.blocks = consolidateObjects(results, 'blocks', config.mep.blocks);\n  config.mep.fragments = consolidateObjects(results, 'fragments', config.mep.fragments);\n  config.mep.commands = consolidateArray(results, 'commands', config.mep.commands);\n\n  const main = document.querySelector('main');\n  if (config.mep.replacepage && !isPostLCP && main) {\n    await replaceInner(config.mep.replacepage.val, main);\n    const { manifestId, targetManifestId } = config.mep.replacepage;\n    addIds(main, manifestId, targetManifestId);\n  }\n\n  config.mep.commands = handleCommands(config.mep.commands);\n\n  const pznList = results.filter((r) => (r.experiment?.manifestType === TRACKED_MANIFEST_TYPE));\n  if (!pznList.length) return;\n\n  const pznVariants = pznList.map((r) => {\n    const val = r.experiment.selectedVariantName.replace(TARGET_EXP_PREFIX, '').trim().slice(0, 15);\n    return val === 'default' ? 'nopzn' : val;\n  });\n  const pznManifests = pznList.map((r) => {\n    const val = r.experiment?.manifestOverrideName || r.experiment?.manifest;\n    return getFileName(val).replace('.json', '').trim().slice(0, 15);\n  });\n  config.mep.martech = `|${pznVariants.join('--')}|${pznManifests.join('--')}`;\n}\n\nexport const combineMepSources = async (persEnabled, promoEnabled, mepParam) => {\n  let persManifests = [];\n\n  if (persEnabled) {\n    persManifests = persEnabled.toLowerCase()\n      .split(/,|(\\s+)|(\\\\n)/g)\n      .filter((path) => path?.trim())\n      .map((manifestPath) => ({ manifestPath }));\n  }\n\n  if (promoEnabled) {\n    const { default: getPromoManifests } = await import('./promo-utils.js');\n    persManifests = persManifests.concat(getPromoManifests(promoEnabled, PAGE_URL.searchParams));\n  }\n\n  if (mepParam && mepParam !== 'off') {\n    const persManifestPaths = persManifests.map((manifest) => {\n      const { manifestPath } = manifest;\n      if (manifestPath.startsWith('/')) return manifestPath;\n      try {\n        const url = new URL(manifestPath);\n        return url.pathname;\n      } catch (e) {\n        return manifestPath;\n      }\n    });\n\n    mepParam.split('---').forEach((manifestPair) => {\n      const manifestPath = manifestPair.trim().toLowerCase().split('--')[0];\n      if (!persManifestPaths.includes(manifestPath)) {\n        persManifests.push({ manifestPath });\n      }\n    });\n  }\n  return persManifests;\n};\n\nasync function callMartech(config) {\n  const { getTargetPersonalization } = await import('../../martech/martech.js');\n  const { targetManifests, targetPropositions } = await getTargetPersonalization();\n  config.mep.targetManifests = targetManifests;\n  if (targetPropositions?.length && window._satellite) {\n    window._satellite.track('propositionDisplay', targetPropositions);\n  }\n  if (config.mep.targetEnabled === 'postlcp') {\n    const event = new CustomEvent(MARTECH_RETURNED_EVENT, { detail: 'Martech returned' });\n    window.dispatchEvent(event);\n  }\n  return targetManifests;\n}\nconst awaitMartech = () => new Promise((resolve) => {\n  const listener = (event) => resolve(event.detail);\n  window.addEventListener(MARTECH_RETURNED_EVENT, listener, { once: true });\n});\n\nexport async function init(enablements = {}) {\n  let manifests = [];\n  const {\n    mepParam, mepHighlight, mepButton, pzn, promo, target, postLCP,\n  } = enablements;\n  const config = getConfig();\n  if (postLCP) {\n    isPostLCP = true;\n  } else {\n    config.mep = {\n      updateFragDataProps,\n      preview: (mepButton !== 'off'\n        && (config.env?.name !== 'prod' || mepParam || mepParam === '' || mepButton)),\n      variantOverride: parseMepParam(mepParam),\n      highlight: (mepHighlight !== undefined && mepHighlight !== 'false'),\n      targetEnabled: target,\n      experiments: [],\n      geoPrefix: config.locale?.prefix.split('/')[1]?.toLowerCase() || 'en-us',\n    };\n    manifests = manifests.concat(await combineMepSources(pzn, promo, mepParam));\n    manifests?.forEach((manifest) => {\n      if (manifest.disabled) return;\n      const normalizedURL = normalizePath(manifest.manifestPath);\n      loadLink(normalizedURL, { as: 'fetch', crossorigin: 'anonymous', rel: 'preload' });\n    });\n    if (pzn) loadLink(getXLGListURL(config), { as: 'fetch', crossorigin: 'anonymous', rel: 'preload' });\n  }\n\n  if (target === true) manifests = manifests.concat(await callMartech(config));\n  if (target === 'postlcp') callMartech(config);\n  if (postLCP) {\n    if (!config.mep.targetManifests) await awaitMartech();\n    manifests = config.mep.targetManifests;\n  }\n  if (!manifests || !manifests.length) return;\n  try {\n    await applyPers(manifests);\n  } catch (e) {\n    log(`MEP Error: ${e.toString()}`);\n    window.lana?.log(`MEP Error: ${e.toString()}`);\n  }\n}\n"],
  "mappings": "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",
  "names": ["key"]
}

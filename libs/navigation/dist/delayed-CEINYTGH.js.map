{
  "version": 3,
  "sources": ["../../scripts/delayed.js"],
  "sourcesContent": ["/*\n * Copyright 2024 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport const loadJarvisChat = async (getConfig, getMetadata, loadScript, loadStyle) => {\n  const config = getConfig();\n  const jarvis = getMetadata('jarvis-chat')?.toLowerCase();\n  if (!jarvis || !['mobile', 'desktop', 'on'].includes(jarvis)\n    || !config.jarvis?.id || !config.jarvis?.version) return;\n\n  const desktopViewport = window.matchMedia('(min-width: 900px)').matches;\n  if (jarvis === 'mobile' && desktopViewport) return;\n  if (jarvis === 'desktop' && !desktopViewport) return;\n\n  const { initJarvisChat } = await import('../features/jarvis-chat.js');\n  initJarvisChat(config, loadScript, loadStyle, getMetadata);\n};\n\nexport const loadPrivacy = async (getConfig, loadScript) => {\n  const acom = '7a5eb705-95ed-4cc4-a11d-0cc5760e93db';\n  const ids = {\n    'hlx.page': '3a6a37fe-9e07-4aa9-8640-8f358a623271-test',\n    'hlx.live': '926b16ce-cc88-4c6a-af45-21749f3167f3-test',\n    'aem.page': '01930689-3b6a-7d5f-9797-8df2c3901a05-test',\n    'aem.live': '01930691-c4e5-75ba-aa0e-721e1213c139-test',\n  };\n\n  const otDomainId = ids?.[Object.keys(ids)\n    .find((domainId) => window.location.host.includes(domainId))]\n      ?? (getConfig()?.privacyId || acom);\n  window.fedsConfig = {\n    privacy: { otDomainId },\n    documentLanguage: true,\n  };\n  loadScript('https://www.adobe.com/etc.clientlibs/globalnav/clientlibs/base/privacy-standalone.js');\n\n  // Privacy triggers can exist anywhere on the page and can be added at any time\n  document.addEventListener('click', (event) => {\n    if (event.target.closest('a[href*=\"#openPrivacy\"]')) {\n      event.preventDefault();\n      window.adobePrivacy?.showPreferenceCenter();\n    }\n  });\n};\n\nexport const loadGoogleLogin = async (getMetadata, loadIms, loadScript, getConfig) => {\n  const googleLogin = getMetadata('google-login')?.toLowerCase();\n  if (window.adobeIMS?.isSignedInUser() || !['mobile', 'desktop', 'on'].includes(googleLogin)) return;\n  const desktopViewport = window.matchMedia('(min-width: 900px)').matches;\n  if (googleLogin === 'mobile' && desktopViewport) return;\n  if (googleLogin === 'desktop' && !desktopViewport) return;\n\n  const { default: initGoogleLogin } = await import('../features/google-login.js');\n  initGoogleLogin(loadIms, getMetadata, loadScript, getConfig);\n};\n\n/**\n * Executes everything that happens a lot later, without impacting the user experience.\n */\nconst loadDelayed = ([\n  getConfig,\n  getMetadata,\n  loadScript,\n  loadStyle,\n  loadIms,\n], DELAY = 3000) => new Promise((resolve) => {\n  setTimeout(() => {\n    loadPrivacy(getConfig, loadScript);\n    loadJarvisChat(getConfig, getMetadata, loadScript, loadStyle);\n    loadGoogleLogin(getMetadata, loadIms, loadScript, getConfig);\n    if (getMetadata('interlinks') === 'on') {\n      const { locale } = getConfig();\n      const path = `${locale.contentRoot}/keywords.json`;\n      const language = locale.ietf?.split('-')[0];\n      import('../features/interlinks.js').then((mod) => { mod.default(path, language); resolve(mod); });\n    } else {\n      resolve(null);\n    }\n    import('../utils/samplerum.js').then(({ sampleRUM }) => sampleRUM());\n  }, DELAY);\n});\n\nexport default loadDelayed;\n"],
  "mappings": ";;;AAYO,IAAM,iBAAiB,OAAO,WAAW,aAAa,YAAY,cAAc;AACrF,QAAM,SAAS,UAAU;AACzB,QAAM,SAAS,YAAY,aAAa,GAAG,YAAY;AACvD,MAAI,CAAC,UAAU,CAAC,CAAC,UAAU,WAAW,IAAI,EAAE,SAAS,MAAM,KACtD,CAAC,OAAO,QAAQ,MAAM,CAAC,OAAO,QAAQ,QAAS;AAEpD,QAAM,kBAAkB,OAAO,WAAW,oBAAoB,EAAE;AAChE,MAAI,WAAW,YAAY,gBAAiB;AAC5C,MAAI,WAAW,aAAa,CAAC,gBAAiB;AAE9C,QAAM,EAAE,eAAe,IAAI,MAAM,OAAO,2BAA4B;AACpE,iBAAe,QAAQ,YAAY,WAAW,WAAW;AAC3D;AAEO,IAAM,cAAc,OAAO,WAAW,eAAe;AAC1D,QAAM,OAAO;AACb,QAAM,MAAM;AAAA,IACV,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,YAAY;AAAA,EACd;AAEA,QAAM,aAAa,MAAM,OAAO,KAAK,GAAG,EACrC,KAAK,CAAC,aAAa,OAAO,SAAS,KAAK,SAAS,QAAQ,CAAC,CAAC,MACtD,UAAU,GAAG,aAAa;AAClC,SAAO,aAAa;AAAA,IAClB,SAAS,EAAE,WAAW;AAAA,IACtB,kBAAkB;AAAA,EACpB;AACA,aAAW,sFAAsF;AAGjG,WAAS,iBAAiB,SAAS,CAAC,UAAU;AAC5C,QAAI,MAAM,OAAO,QAAQ,yBAAyB,GAAG;AACnD,YAAM,eAAe;AACrB,aAAO,cAAc,qBAAqB;AAAA,IAC5C;AAAA,EACF,CAAC;AACH;AAEO,IAAM,kBAAkB,OAAO,aAAa,SAAS,YAAY,cAAc;AACpF,QAAM,cAAc,YAAY,cAAc,GAAG,YAAY;AAC7D,MAAI,OAAO,UAAU,eAAe,KAAK,CAAC,CAAC,UAAU,WAAW,IAAI,EAAE,SAAS,WAAW,EAAG;AAC7F,QAAM,kBAAkB,OAAO,WAAW,oBAAoB,EAAE;AAChE,MAAI,gBAAgB,YAAY,gBAAiB;AACjD,MAAI,gBAAgB,aAAa,CAAC,gBAAiB;AAEnD,QAAM,EAAE,SAAS,gBAAgB,IAAI,MAAM,OAAO,4BAA6B;AAC/E,kBAAgB,SAAS,aAAa,YAAY,SAAS;AAC7D;AAKA,IAAM,cAAc,CAAC;AAAA,EACnB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAAG,QAAQ,QAAS,IAAI,QAAQ,CAAC,YAAY;AAC3C,aAAW,MAAM;AACf,gBAAY,WAAW,UAAU;AACjC,mBAAe,WAAW,aAAa,YAAY,SAAS;AAC5D,oBAAgB,aAAa,SAAS,YAAY,SAAS;AAC3D,QAAI,YAAY,YAAY,MAAM,MAAM;AACtC,YAAM,EAAE,OAAO,IAAI,UAAU;AAC7B,YAAM,OAAO,GAAG,OAAO,WAAW;AAClC,YAAM,WAAW,OAAO,MAAM,MAAM,GAAG,EAAE,CAAC;AAC1C,aAAO,0BAA2B,EAAE,KAAK,CAAC,QAAQ;AAAE,YAAI,QAAQ,MAAM,QAAQ;AAAG,gBAAQ,GAAG;AAAA,MAAG,CAAC;AAAA,IAClG,OAAO;AACL,cAAQ,IAAI;AAAA,IACd;AACA,WAAO,yBAAuB,EAAE,KAAK,CAAC,EAAE,UAAU,MAAM,UAAU,CAAC;AAAA,EACrE,GAAG,KAAK;AACV,CAAC;AAED,IAAO,kBAAQ;",
  "names": []
}

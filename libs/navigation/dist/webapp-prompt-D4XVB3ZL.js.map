{
  "version": 3,
  "sources": ["../../features/webapp-prompt/webapp-prompt.js"],
  "sourcesContent": ["import {\n  getFedsPlaceholderConfig,\n  getUserProfile,\n  icons,\n  lanaLog,\n  toFragment,\n} from '../../blocks/global-navigation/utilities/utilities.js';\nimport { getConfig, decorateSVG } from '../../utils/utils.js';\nimport { replaceKey, replaceText } from '../placeholders.js';\n\nexport const DISMISSAL_CONFIG = {\n  animationCount: 2,\n  animationDuration: 2500,\n  tooltipMessage: 'Use the App Switcher to quickly find apps.',\n  tooltipDuration: 5000,\n};\n\nconst CONFIG = {\n  selectors: { prompt: '.appPrompt' },\n  delay: 7000,\n  loaderColor: '#EB1000',\n  ...DISMISSAL_CONFIG,\n};\n\nconst getElemText = (elem) => elem?.textContent?.trim();\n\nconst getMetadata = (el) => [...el.childNodes].reduce((acc, row) => {\n  if (row.children?.length === 2) {\n    const key = getElemText(row.children[0]);\n    const val = getElemText(row.children[1]);\n    if (key && val) acc[key] = val;\n  }\n  return acc;\n}, {});\n\nconst getIcon = (content) => {\n  const picture = content.querySelector('picture');\n  if (picture) return picture;\n\n  const svg = content.querySelector('a[href$=\".svg\"]');\n  if (svg) return decorateSVG(svg);\n\n  return icons.company;\n};\n\nconst showTooltip = (\n  element,\n  message = CONFIG.tooltipMessage,\n  time = CONFIG.tooltipDuration,\n) => {\n  element.setAttribute('data-pep-dismissal-tooltip', message);\n  const cleanup = () => element.removeAttribute('data-pep-dismissal-tooltip');\n  const timeoutID = setTimeout(cleanup, time);\n  element.addEventListener('click', () => {\n    cleanup();\n    clearTimeout(timeoutID);\n  }, { once: true });\n};\n\nconst playFocusAnimation = (\n  element,\n  iterationCount = CONFIG.animationCount,\n  animationDuration = CONFIG.animationDuration,\n) => {\n  element.classList.add('coach-indicator');\n  element.style.setProperty('--animation-duration', `${animationDuration}ms`);\n  const rings = [];\n  const createRing = () => toFragment`\n    <div\n      class=\"coach-indicator-ring\"\n      style=\"animation-iteration-count: ${iterationCount};\">\n    </div>`;\n  for (let i = 0; i < 3; i += 1) {\n    const ring = createRing();\n    element.insertAdjacentElement('afterbegin', ring);\n    rings.push(ring);\n  }\n  // The cleanup function is added to the event queue\n  // some time after the end of the animation because\n  // the cleanup isn't high priority but it should be done\n  // eventually. (Animation truly ends slightly after\n  // animationDuration * iterationCount due to animation-delay)\n  const cleanup = () => {\n    rings.forEach((ring) => ring.remove());\n    element.classList.remove('coach-indicator');\n  };\n  const timeoutID = setTimeout(cleanup, (iterationCount + 1) * animationDuration);\n  element.addEventListener('click', () => {\n    cleanup();\n    clearTimeout(timeoutID);\n  }, { once: true });\n};\n\nconst modalsActive = () => !!document.querySelector('.dialog-modal');\n\nconst waitForClosedModalsThen = (loadPEP) => {\n  if (modalsActive()) {\n    setTimeout(() => waitForClosedModalsThen(loadPEP), 200);\n    return;\n  }\n  loadPEP();\n};\n\nexport class AppPrompt {\n  constructor({ promptPath, entName, parent, getAnchorState } = {}) {\n    this.promptPath = promptPath;\n    this.entName = entName;\n    this.parent = parent;\n    this.getAnchorState = getAnchorState;\n    this.id = this.promptPath.split('/').pop();\n    this.elements = {};\n    if (modalsActive()) {\n      window.addEventListener(\n        'milo:modal:closed',\n        () => waitForClosedModalsThen(this.init),\n        { once: true },\n      );\n      this.initializationQueued = true;\n      return;\n    }\n    this.initializationQueued = false;\n  }\n\n  init = async () => {\n    if (this.isDismissedPrompt() || !this.parent) return;\n\n    const skipEntitlements = new URLSearchParams(window.location.search).get('skipPepEntitlements');\n    const entMatch = skipEntitlements || await this.doesEntitlementMatch();\n    if (!entMatch) return;\n\n    const content = await this.fetchContent();\n    if (!content) return;\n\n    await this.getData(content);\n    if (!this.options['redirect-url'] || !this.options['product-name']) return;\n\n    ({ id: this.anchorId, isOpen: this.isAnchorExpanded } = await this.getAnchorState()\n      .catch((e) => {\n        lanaLog({\n          message: 'Error on getting anchor state',\n          e,\n          tags: 'errorType=error,module=pep',\n        });\n        return {};\n      }));\n    if (this.isAnchorExpanded) return;\n\n    if (this.anchorId) this.anchor = document.querySelector(`#${this.anchorId}`);\n    this.offset = this.anchor\n      ? this.parent.offsetWidth - (this.anchor.offsetWidth + this.anchor.offsetLeft) : 0;\n    this.template = this.decorate();\n\n    this.addEventListeners();\n\n    this.parent.prepend(this.template);\n    this.elements.closeIcon.focus();\n\n    this.redirectFn = this.initRedirect();\n  };\n\n  doesEntitlementMatch = async () => {\n    const config = getConfig();\n    const entitlements = await config.entitlements();\n    const extraEnts = new URLSearchParams(window.location.search).get('mockPepEnts');\n    extraEnts?.split(',').forEach((ent) => entitlements.push(ent.trim()));\n    return entitlements?.length && entitlements.includes(this.entName);\n  };\n\n  fetchContent = async () => {\n    const res = await fetch(`${this.promptPath}.plain.html`);\n\n    if (!res.ok) {\n      lanaLog({\n        message: `Error fetching content for prompt: ${this.promptPath}.plain.html`,\n        e: `Status ${res.status} when trying to fetch content for prompt`,\n        tags: 'errorType=error,module=pep',\n      });\n      return '';\n    }\n\n    const text = await res.text();\n    const content = await replaceText(text, getFedsPlaceholderConfig());\n    const html = new DOMParser().parseFromString(content, 'text/html');\n\n    return html;\n  };\n\n  getData = async (content) => {\n    this.icon = getIcon(content);\n\n    const selectors = {\n      title: 'h2',\n      subtitle: 'h3',\n      cancel: 'em > a',\n    };\n\n    await Promise.all(Object.keys(selectors).map(async (key) => {\n      const element = content.querySelector(selectors[key]);\n      if (element?.innerText) this[key] = element.innerText;\n      else {\n        const label = await replaceKey(`pep-prompt-${key}`, getFedsPlaceholderConfig());\n        this[key] = label === `pep prompt ${key}` ? '' : label;\n      }\n    }));\n\n    await getUserProfile()\n      .then((data) => {\n        const requiredFields = ['display_name', 'email', 'avatar'];\n        const hasRequiredFields = requiredFields.every((field) => !!data[field]);\n        if (!hasRequiredFields) return;\n\n        this.profile = data;\n      }).catch((e) => {\n        lanaLog({\n          message: 'Error fetching user profile',\n          e,\n          tags: 'errorType=error,module=pep',\n        });\n      });\n\n    const metadata = getMetadata(content.querySelector('.section-metadata'));\n    metadata['loader-duration'] = parseInt(metadata['loader-duration'] || CONFIG.delay, 10);\n    metadata['loader-color'] = metadata['loader-color'] || CONFIG.loaderColor;\n    metadata['dismissal-animation-count'] = parseInt(metadata['dismissal-animation-count'] ?? CONFIG.animationCount, 10);\n    metadata['dismissal-animation-duration'] = parseInt(metadata['dismissal-animation-duration'] ?? CONFIG.animationDuration, 10);\n    metadata['dismissal-tooltip-message'] ??= CONFIG.tooltipMessage;\n    metadata['dismissal-tooltip-duration'] = parseInt(metadata['dismissal-tooltip-duration'] ?? CONFIG.tooltipDuration, 10);\n    this.options = metadata;\n  };\n\n  decorate = () => {\n    this.elements.closeIcon = toFragment`<button daa-ll=\"Close Modal\" aria-label=\"${this.cancel}\" class=\"appPrompt-close\"></button>`;\n    this.elements.cta = toFragment`<button daa-ll=\"Stay on this page\" class=\"appPrompt-cta appPrompt-cta--close\">${this.cancel}</button>`;\n    this.elements.profile = this.profile\n      ? toFragment`<div class=\"appPrompt-profile\">\n        <div class=\"appPrompt-avatar\">\n          <img class=\"appPrompt-avatar-image\" src=\"${this.profile.avatar}\" />\n        </div>\n        <div class=\"appPrompt-user\">\n          <div class=\"appPrompt-name\">${this.profile.display_name}</div>\n          <div class=\"appPrompt-email\">${this.profile.email}</div>\n        </div>\n      </div>`\n      : '';\n\n    return toFragment`<div\n      daa-state=\"true\" daa-im=\"true\" daa-lh=\"PEP Modal_${this.options['product-name']?.toLowerCase()}\"\n      class=\"appPrompt\" style=\"margin: 0 ${this.offset}px\">\n      ${this.elements.closeIcon}\n      <div class=\"appPrompt-icon\">\n        ${this.icon}\n      </div>\n      <div class=\"appPrompt-title\">${this.title}</div>\n      ${this.elements.profile}\n      <div class=\"appPrompt-footer\">\n        <div class=\"appPrompt-text\">${this.subtitle}</div>\n        ${this.elements.cta}\n      </div>\n      <div class=\"appPrompt-progressWrapper\">\n        <div class=\"appPrompt-progress\" style=\"background-color: ${this.options['loader-color']}; animation-duration: ${this.options['loader-duration']}ms;\"></div>\n      </div>\n    </div>`;\n  };\n\n  addEventListeners = () => {\n    this.anchor?.addEventListener('click', () => this.close({ dismissalActions: false }));\n    document.addEventListener('keydown', this.handleKeyDown);\n\n    [this.elements.closeIcon, this.elements.cta]\n      .forEach((elem) => elem.addEventListener('click', this.close));\n  };\n\n  handleKeyDown = (event) => {\n    if (event.key === 'Escape') this.close();\n  };\n\n  static redirectTo(url) {\n    window.location.assign(url);\n  }\n\n  initRedirect = () => setTimeout(() => {\n    this.close({ saveDismissal: false, dismissalActions: false });\n    AppPrompt.redirectTo(this.options['redirect-url']);\n  }, this.options['loader-duration']);\n\n  isDismissedPrompt = () => AppPrompt.getDismissedPrompts().includes(this.id);\n\n  setDismissedPrompt = () => {\n    const dismissedPrompts = new Set(AppPrompt.getDismissedPrompts());\n    dismissedPrompts.add(this.id);\n    document.cookie = `dismissedAppPrompts=${JSON.stringify([...dismissedPrompts])};path=/`;\n  };\n\n  close = ({ saveDismissal = true, dismissalActions = true } = {}) => {\n    const appPromptElem = document.querySelector(CONFIG.selectors.prompt);\n    appPromptElem?.remove();\n    clearTimeout(this.redirectFn);\n    if (saveDismissal) this.setDismissedPrompt();\n    document.removeEventListener('keydown', this.handleKeyDown);\n    this.anchor?.focus();\n    this.anchor?.removeEventListener('click', this.close);\n\n    if (dismissalActions) {\n      playFocusAnimation(\n        this.anchor,\n        this.options['dismissal-animation-count'],\n        this.options['dismissal-animation-duration'],\n      );\n      showTooltip(\n        this.anchor,\n        this.options['dismissal-tooltip-message'],\n        this.options['dismissal-tooltip-duration'],\n      );\n    }\n  };\n\n  static getDismissedPrompts = () => {\n    const cookie = document.cookie\n      .split(';')\n      .find((item) => item.trim().startsWith('dismissedAppPrompts='))\n      ?.split('=')[1];\n\n    return cookie ? JSON.parse(cookie) : [];\n  };\n}\n\nexport default async function init(config) {\n  try {\n    const appPrompt = new AppPrompt(config);\n    if (!appPrompt.initializationQueued) await appPrompt.init();\n    return appPrompt;\n  } catch (e) {\n    lanaLog({ message: 'Could not initialize PEP', e, tags: 'errorType=error,module=pep' });\n    return null;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}

{
  "version": 3,
  "sources": ["../../features/seotech/seotech.js"],
  "sourcesContent": ["export const PROD_BASE_URL = 'https://www.adobe.com/seotech/api';\n\nexport const REGEX_ADOBETV = /(?:https?:\\/\\/)?(?:stage-)?video.tv.adobe.com\\/v\\/([\\d]+)/;\nexport const REGEX_YOUTUBE = /(?:https?:\\/\\/)?(?:www\\.)?(?:youtube\\.com|youtu\\.be)\\/(?:watch\\?v=)?([a-zA-Z0-9_-]+)/;\nexport const VIDEO_OBJECT_PROVIDERS = [\n  { provider: 'adobe', regex: REGEX_ADOBETV },\n  { provider: 'youtube', regex: REGEX_YOUTUBE },\n];\n\nexport function logError(msg) {\n  window.lana?.log(`SEOTECH: ${msg}`, {\n    debug: false,\n    implicitSampleRate: 100,\n    sampleRate: 100,\n    tags: 'errorType=seotech',\n  });\n}\n\nexport function parseVideoUrl(url, providers = VIDEO_OBJECT_PROVIDERS) {\n  for (const { regex, provider } of providers) {\n    const match = url.match(regex);\n    if (match) {\n      return { provider, id: match[1] };\n    }\n  }\n  return null;\n}\n\nexport async function getVideoObject(url, { baseUrl = PROD_BASE_URL } = {}) {\n  const parsedUrl = parseVideoUrl(url);\n  if (!parsedUrl) {\n    throw new Error(`Invalid video url: ${url}`);\n  }\n  const { provider, id } = parsedUrl;\n  const videoObjectUrl = `${baseUrl}/json-ld/types/video-object/providers/${provider}/${id}`;\n  const resp = await fetch(videoObjectUrl, { headers: { 'Content-Type': 'application/json' } });\n  const body = await resp?.json();\n  if (!resp.ok) {\n    throw new Error(`Failed to fetch video: ${body?.error}`);\n  }\n  return body.videoObject;\n}\n\n// https://github.com/orgs/adobecom/discussions/2633\nexport function getRepoByImsClientId(imsClientId) {\n  return {\n    'adobedotcom-cc': 'cc',\n    acrobatmilo: 'dc',\n    bacom: 'bacom',\n    homepage_milo: 'homepage',\n    milo: 'milo',\n  }[imsClientId];\n}\n\nexport async function sha256(message) {\n  const msgUint8 = new TextEncoder().encode(message);\n  const hashBuffer = await window.crypto.subtle.digest('SHA-256', msgUint8);\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n  const hashHex = hashArray.map((b) => b.toString(16).padStart(2, '0')).join('');\n  return hashHex;\n}\n\nexport async function getStructuredData(bucket, id, { baseUrl = PROD_BASE_URL } = {}) {\n  if (!bucket || !id) throw new Error('bucket and id are required');\n  const url = `${baseUrl}/structured-data/${bucket}/${id}`;\n  const resp = await fetch(url);\n  if (!resp || !resp.ok) return null;\n  const body = await resp.json();\n  return body;\n}\n\nexport async function appendScriptTag({ locationUrl, getMetadata, createTag, getConfig }) {\n  const url = new URL(locationUrl);\n  const params = new URLSearchParams(url.search);\n  const baseUrl = params.get('seotech-api-base-url') || undefined;\n  const append = (obj, className) => {\n    if (!obj) return;\n    const attributes = { type: 'application/ld+json' };\n    if (className) attributes.class = className;\n    const script = createTag('script', attributes, JSON.stringify(obj));\n    document.head.append(script);\n  };\n\n  const promises = [];\n  if (getMetadata('seotech-structured-data') === 'on') {\n    const bucket = getRepoByImsClientId(getConfig()?.imsClientId);\n    const id = await sha256(url.pathname?.replace('.html', ''));\n    promises.push(getStructuredData(bucket, id, { baseUrl })\n      .then((obj) => append(obj, 'seotech-structured-data'))\n      .catch((e) => logError(e.message)));\n  }\n  const videoUrl = getMetadata('seotech-video-url');\n  if (videoUrl) {\n    promises.push(getVideoObject(videoUrl, { baseUrl })\n      .then((videoObject) => append(videoObject, 'seotech-video-url'))\n      .catch((e) => logError(e.message)));\n  }\n  return Promise.all(promises);\n}\n\nexport default appendScriptTag;\n"],
  "mappings": "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",
  "names": []
}

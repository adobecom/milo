{
  "version": 3,
  "sources": ["../../martech/attributes.js"],
  "sourcesContent": ["import { getMetadata } from '../utils/utils.js';\n\nconst INVALID_CHARACTERS = /[^\\u00C0-\\u1FFF\\u2C00-\\uD7FF\\w]+/g;\nconst LEAD_UNDERSCORES = /^_+|_+$/g;\n\nexport function processTrackingLabels(text, config, charLimit) {\n  let analyticsValue = text?.replace(INVALID_CHARACTERS, ' ').replace(LEAD_UNDERSCORES, '').trim();\n  if (config) {\n    const { analyticLocalization, mep } = config;\n    const mepLoc = mep?.analyticLocalization?.[analyticsValue];\n    if (mepLoc) {\n      analyticsValue = mepLoc;\n    } else {\n      const loc = analyticLocalization?.[analyticsValue];\n      if (loc) analyticsValue = loc;\n    }\n  }\n  if (charLimit) return analyticsValue.slice(0, charLimit);\n  return analyticsValue;\n}\n\nfunction getHeaderCharLimit(str) {\n  const defaultLimit = 20;\n  if (!str) return defaultLimit;\n  if (str === 'off') return false;\n  if (!Number.isNaN(Number(str))) return parseInt(str, 10);\n  return defaultLimit;\n}\nexport function decorateDefaultLinkAnalytics(block, config) {\n  if (block.classList.length\n    && !block.className.includes('metadata')\n    && !block.classList.contains('link-block')\n    && !block.classList.contains('section')\n    && block.nodeName === 'DIV') {\n    let header = '';\n    let linkCount = 1;\n\n    const headerCharLimit = getHeaderCharLimit(getMetadata('analytics-header-limit'));\n    const headerSelector = 'h1, h2, h3, h4, h5, h6';\n    let analyticsSelector = `${headerSelector}, .tracking-header`;\n    const headers = block.querySelectorAll(analyticsSelector);\n    if (!headers.length) analyticsSelector = `${analyticsSelector}, b, strong`;\n    block.querySelectorAll(`${analyticsSelector}, a:not(.video.link-block, .no-track), button:not(.no-track)`).forEach((item) => {\n      if (item.nodeName === 'A' || item.nodeName === 'BUTTON') {\n        if (item.classList.contains('tracking-header')) {\n          header = processTrackingLabels(item.textContent, config, headerCharLimit);\n        } else if (!header) {\n          const section = block.closest('.section');\n          if (section?.className.includes('-up') || section?.classList.contains('milo-card-section')) {\n            const previousHeader = section?.previousElementSibling?.querySelector(headerSelector);\n            if (previousHeader) {\n              header = processTrackingLabels(previousHeader.textContent, config, headerCharLimit);\n            }\n          }\n        }\n        if (item.hasAttribute('daa-ll')) {\n          const labelArray = item.getAttribute('daa-ll').split('-').map((part) => {\n            if (part === '') return '';\n            return processTrackingLabels(part, config, 20);\n          });\n          item.setAttribute('daa-ll', labelArray.join('-'));\n        } else {\n          let label = item.textContent?.trim();\n          if (label === '') {\n            label = item.getAttribute('title')\n                || item.getAttribute('aria-label')\n                || item.querySelector('img')?.getAttribute('alt')\n                || 'no label';\n          }\n          label = processTrackingLabels(label, config, 20);\n          item.setAttribute('daa-ll', `${label}-${linkCount}--${header}`);\n        }\n        linkCount += 1;\n      } else {\n        if (item.nodeName === 'STRONG' || item.nodeName === 'B') {\n          item.classList.add('tracking-header');\n        }\n        header = processTrackingLabels(item.textContent, config, headerCharLimit);\n      }\n    });\n  }\n}\n\nexport async function decorateSectionAnalytics(section, idx, config) {\n  const id = Number.isInteger(idx) ? `s${idx + 1}` : idx;\n  document.querySelector('main')?.setAttribute('daa-im', 'true');\n  section.setAttribute('daa-lh', id);\n  section.querySelectorAll('[data-block] [data-block]').forEach((block) => {\n    block.removeAttribute('data-block');\n  });\n  const mepMartech = config?.mep?.martech || '';\n  section.querySelectorAll('[data-block]').forEach((block, blockIdx) => {\n    const lhAtt = block.getAttribute('daa-lh');\n    if (lhAtt) {\n      block.setAttribute('daa-lh', `${lhAtt}${mepMartech}`);\n    } else {\n      const blockName = block.classList[0] || '';\n      block.setAttribute('daa-lh', `b${blockIdx + 1}|${blockName.slice(0, 15)}${mepMartech}`);\n      decorateDefaultLinkAnalytics(block, config);\n    }\n    block.removeAttribute('data-block');\n  });\n}\n\n// below functions are being sunset\nexport function decorateBlockAnalytics() { return false; }\nexport function decorateLinkAnalytics() { return false; }\n\nconst RE_ALPHANUM = /[^0-9a-z]/gi;\nconst RE_TRIM_UNDERSCORE = /^_+|_+$/g;\nexport const analyticsGetLabel = (txt) => txt.replaceAll('&', 'and')\n  .replace(RE_ALPHANUM, '_')\n  .replace(RE_TRIM_UNDERSCORE, '');\n\nexport const analyticsDecorateList = (li, idx) => {\n  const link = li.firstChild?.nodeName === 'A' && li.firstChild;\n  if (!link) return;\n\n  const label = link.textContent || link.getAttribute('aria-label');\n  if (!label) return;\n\n  link.setAttribute('daa-ll', `${analyticsGetLabel(label)}-${idx + 1}`);\n};\n"],
  "mappings": "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",
  "names": []
}

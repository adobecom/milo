{
  "version": 3,
  "sources": ["../../features/dynamic-navigation/status.js"],
  "sourcesContent": ["import { createTag, getConfig, getMetadata } from '../../utils/utils.js';\nimport { foundDisableValues } from './dynamic-navigation.js';\n\nexport const ACTIVE = 'active';\nexport const ENABLED = 'enabled';\nexport const INACTIVE = 'inactive';\nexport const tooltipInfo = {\n  active: 'Displayed in green, this status appears when a user is on an entry page or a page with the Dynamic Nav enabled, indicating that the nav is fully functioning.',\n  enabled: 'Displayed in yellow, this status indicates that the Dynamic Nav is set to \"on,\" but the user has not yet visited an entry page.',\n  inactive: 'Displayed in red, this status indicates that the Dynamic Nav is either not configured or has been disabled.',\n};\n\nconst getCurrentSource = (status, storageSource, authoredSource) => {\n  if (status === 'on') {\n    return storageSource || authoredSource;\n  }\n  return authoredSource;\n};\n\nconst getStatus = (status, disabled, storageSource) => {\n  if (status === 'entry') return ACTIVE;\n\n  if (disabled) return INACTIVE;\n\n  if (status === 'on' && storageSource) return ACTIVE;\n\n  if (status === 'on' && !storageSource) return ENABLED;\n\n  return INACTIVE;\n};\n\nconst processDisableValues = (valueStr, elem, foundValues = false) => {\n  if (!valueStr || valueStr.length === 0) return;\n\n  const disableValueList = valueStr.split(',');\n  const table = createTag('table');\n  const flatValues = Array.isArray(foundValues) && foundValues.flat();\n\n  table.innerHTML = `\n      <caption>Disable Values</caption>\n      <thead>\n        <tr>\n          <th>Key</th>\n          <th>Value</th>\n          <th>Match?</th>\n        </tr>\n      </thead>\n      <tbody>\n      </tbody>`;\n\n  const tBody = table.querySelector('tbody');\n\n  disableValueList.forEach((pair) => {\n    const itemRow = createTag('tr');\n    const [key, value] = pair.split(';');\n    const keyElem = createTag('td');\n    const valElem = createTag('td');\n    const matchElem = createTag('td');\n    keyElem.innerText = key;\n    valElem.innerText = value;\n    matchElem.innerText = flatValues && flatValues.includes(value) ? 'yes' : 'no';\n\n    itemRow.append(keyElem, valElem, matchElem);\n    tBody.append(itemRow);\n  });\n\n  elem.append(table);\n};\n\nconst returnPath = (url) => {\n  if (!url.startsWith('https://')) return '';\n  const sourceUrl = new URL(url);\n  return sourceUrl.pathname;\n};\n\nconst createStatusWidget = (dynamicNavKey) => {\n  const storedSource = window.sessionStorage.getItem('gnavSource');\n  const authoredSource = getMetadata('gnav-source') || 'Metadata not found: site gnav source';\n  const dynamicNavSetting = getMetadata('dynamic-nav');\n  const currentSource = getCurrentSource(dynamicNavSetting, storedSource, authoredSource);\n  const dynamicNavDisableValues = getMetadata('dynamic-nav-disable');\n  const foundValues = foundDisableValues();\n  const status = getStatus(dynamicNavSetting, foundValues.length >= 1, storedSource);\n  const statusWidget = createTag('div', { class: 'dynamic-nav-status' });\n\n  statusWidget.innerHTML = `\n    <span class=\"title\"><span class=\"dns-badge\"></span>Dynamic Nav</span>\n    <section class=\"details hidden\">\n      <span class=\"dns-close\"></span>\n      <div class=\"message additional-info\">\n        <p>Additional Info:\n          <span>${tooltipInfo[status]}</span>\n        </p>\n      </div>\n      <p class=\"status\">Status: <span>${status}</span></p> \n      <p class=\"setting\">Setting: <span>${dynamicNavSetting}</span></p>\n      <p class=\"consumer-key\">Consumer key: <span>${dynamicNavKey}</span></p>\n      <div class=\"nav-source-info\">\n        <p>Authored and stored source match: <span>${authoredSource === currentSource}</span></p>\n        <p>Authored Nav Source:\n        <span>${returnPath(authoredSource)}</span></p>\n        <p>Stored Nav Source:\n        <span>${returnPath(currentSource)}</span></p>\n      </div>\n      <div class=\"disable-values\">\n      </div>\n    </section>\n  `;\n\n  processDisableValues(dynamicNavDisableValues, statusWidget.querySelector('.disable-values'), foundValues);\n  statusWidget.classList.add(status);\n\n  statusWidget.addEventListener('click', () => {\n    statusWidget.querySelector('.details').classList.toggle('hidden');\n    statusWidget.querySelector('.dns-badge').classList.toggle('dns-open');\n  });\n\n  return statusWidget;\n};\n\nexport default async function main() {\n  const { dynamicNavKey } = getConfig();\n  const statusWidget = createStatusWidget(dynamicNavKey);\n  const topNav = document.querySelector('.feds-topnav');\n  const fedsWrapper = document.querySelector('.feds-nav-wrapper');\n  const dnsClose = statusWidget.querySelector('.dns-close');\n\n  dnsClose.addEventListener('click', () => {\n    topNav.removeChild(statusWidget);\n  });\n\n  fedsWrapper.after(statusWidget);\n}\n"],
  "mappings": "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",
  "names": []
}

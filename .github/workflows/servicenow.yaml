# This workflow will install Python dependencies, run CMR creation in ServiceNow
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Create CMR in ServiceNow

on:
  pull_request_target:
    types:
      - opened
      - closed
    branches:
      - servicenow-cmr-test

permissions:
  contents: read

env:
  IMSACCESS_CLIENT_ID: ${{ secrets.IMSACCESS_CLIENT_ID }}
  IMSACCESS_CLIENT_SECRET: ${{ secrets.IMSACCESS_CLIENT_SECRET_STAGE }}
  IMSACCESS_AUTH_CODE: ${{ secrets.IMSACCESS_AUTH_CODE_STAGE }}
  IPAAS_KEY: ${{ secrets.IPAAS_KEY_STAGE }}
  SNOW_INSTANCE_ID: ${{ secrets.SNOW_INSTANCE_ID }}
  PR_TITLE: ${{ github.event.pull_request.title }}
  PR_BODY: ${{ github.event.pull_request.body }}
  PR_NUMBER: ${{ github.event.pull_request.number }}
  PR_CREATED_AT: ${{ github.event.pull_request.created_at }}
  PR_MERGED_AT: ${{ github.event.pull_request.merged_at }}
  PR_LINK: ${{ github.event.pull_request.html_url }}
  PR_STATE: ${{ github.event.pull_request.state }}
  MILO_RELEASE_SLACK_WH: ${{ secrets.MILO_RELEASE_SLACK_WH }}

jobs:
  create-cmr:
    # Only run this workflow on pull requests that have been newly opened
    if:  ${{ (github.event.pull_request.merged == true || github.event.pull_request.state == 'open') && (github.event.pull_request.base.ref == 'stage' || github.event.pull_request.base.ref == 'main') }}
    runs-on: ubuntu-latest
    outputs:
      TRANSACTION_ID: ${{ steps.create-cmr.outputs.transaction_id }}
      CHANGE_ID: ${{ steps.create-cmr.outputs.change_id }}
      PLANNED_START_TIME: ${{ steps.create-cmr.outputs.planned_start_time }}
      PLANNED_END_TIME: ${{ steps.create-cmr.outputs.planned_end_time }}

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
    - name: Set up Python 3.x, latest minor release
      uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38
      with:
        python-version: "3.x"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip requests timedelta

    - name: Execute script for creating and closing CMR
      run: |
        python ./.github/workflows/servicenow.py

    - name: Execute script for notifying of CMR state
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea
      with:
        script: |
          const notifySnowCr = require('./.github/workflows/snow-cr-notification.js');
          if (process.env.PR_STATE == 'open') {
            await notifySnowCr({ github, context, transaction_id: process.env.TRANSACTION_ID, change_id: null, planned_start_time:  null, planned_end_time: null });
          } else {
            await notifySnowCr({ github, context, transaction_id: process.env.TRANSACTION_ID, change_id: process.env.CHANGE_ID, planned_start_time: process.env.PLANNED_START_TIME, planned_end_time: process.env.PLANNED_END_TIME });
          }

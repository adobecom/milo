name: Dynamic PR Template

on:
  pull_request_target:
    types: [opened, synchronize, reopened]
  pull_request:
    types: [opened, synchronize, reopened]

# Add permissions block
permissions:
  pull-requests: write
  contents: read

jobs:
  update-template:
    runs-on: ubuntu-latest
    steps:
      - name: Debug Info
        run: |
          echo "Event: ${{ github.event_name }}"
          echo "Action: ${{ github.event.action }}"
          echo "PR Number: ${{ github.event.pull_request.number }}"
          echo "Repository: ${{ github.repository }}"
          echo "Actor: ${{ github.actor }}"

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v39
        with:
          files: |
            libs/blocks/global-navigation/**
            libs/blocks/global-footer/**

      - name: Debug Changed Files
        run: |
          echo "Changed files:"
          echo "${{ steps.changed-files.outputs.all_changed_files }}"

      - name: Generate test URLs
        id: test-urls
        run: |
          # Initialize test URLs array
          TEST_URLS=()
          
          # Check if changes are in either global navigation or footer
          if [[ "${{ steps.changed-files.outputs.all_changed_files }}" == *"libs/blocks/global-navigation/"* ]] || [[ "${{ steps.changed-files.outputs.all_changed_files }}" == *"libs/blocks/global-footer/"* ]]; then
            echo "Changes detected in global navigation or footer"
            TEST_URLS=(
              "<!-- Before submitting, please review all open PRs. -->"
              ""
              "* Add your"
              "* Specific"
              "* Features or fixes"
              ""
              "Resolves: [MWPW-NUMBER](https://jira.corp.adobe.com/browse/MWPW-NUMBER)"
              ""
              "**Acrobat:**"
              "- Before: https://www.stage.adobe.com/acrobat/online/sign-pdf.html?martech=off"
              "- After: https://www.stage.adobe.com/acrobat/online/sign-pdf.html?martech=off&milolibs=<branch>--milo--<owner>"
              ""
              "**BACOM:**"
              "- Before: https://business.stage.adobe.com/fr/customer-success-stories.html?martech=off"
              "- After: https://business.stage.adobe.com/fr/customer-success-stories.html?martech=off&milolibs=<branch>--milo--<owner>"
              ""
              "**CC:**"
              "- Before: https://main--cc--adobecom.hlx.live/?martech=off"
              "- After: https://main--cc--adobecom.hlx.live/?martech=off&milolibs=<branch>--milo--<owner>"
              ""
              "**Homepage:**"
              "- Before: https://main--homepage--adobecom.hlx.page/homepage/index-loggedout?martech=off"
              "- After: https://main--homepage--adobecom.hlx.page/homepage/index-loggedout?martech=off&milolibs=<branch>--milo--<owner>"
              ""
              "**Blog:**"
              "- Before: https://main--blog--adobecom.hlx.page/"
              "- After: https://main--blog--adobecom.hlx.page/?milolibs=<branch>--milo--<owner>"
              ""
              "**Milo:**"
              "- Before: https://main--milo--adobecom.aem.page/ch_de/drafts/ramuntea/gnav-refactor?martech=off"
              "- After: https://<branch>--milo--<owner>.aem.page/ch_de/drafts/ramuntea/gnav-refactor?martech=off"
            )
          else
            echo "No changes detected in global navigation or footer"
          fi
          
          # If no specific changes detected, add default test URLs
          if [ ${#TEST_URLS[@]} -eq 0 ]; then
            echo "Adding default test URLs"
            TEST_URLS=(
              "<!-- Before submitting, please review all open PRs. -->"
              ""
              "* Add your"
              "* Specific"
              "* Features or fixes"
              ""
              "Resolves: [MWPW-NUMBER](https://jira.corp.adobe.com/browse/MWPW-NUMBER)"
              ""
              "**Test URLs:**"
              "- Before: https://main--milo--adobecom.aem.page/?martech=off"
              "- After: https://<branch>--milo--adobecom.aem.page/?martech=off"
            )
          fi
          
          # Convert array to JSON and set output
          echo "test_urls<<EOF" >> $GITHUB_OUTPUT
          printf '%s\n' "${TEST_URLS[@]}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Update PR description
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const testUrls = process.env.TEST_URLS.split('\n');
            const prNumber = context.issue.number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            
            try {
              console.log('Attempting to update PR:', prNumber);
              console.log('Repository:', `${owner}/${repo}`);
              
              // Get current PR description
              const { data: pullRequest } = await github.rest.pulls.get({
                owner,
                repo,
                pull_number: prNumber,
              });
              
              console.log('Current PR description:', pullRequest.body);
              
              // Create new description with test URLs
              const testUrlsSection = testUrls.join('\n');
              console.log('New test URLs section:', testUrlsSection);
              
              // Check if Test URLs section exists
              const hasTestUrlsSection = pullRequest.body.includes('## Test URLs');
              
              let newDescription;
              if (hasTestUrlsSection) {
                // Replace existing Test URLs section
                newDescription = pullRequest.body.replace(/## Test URLs[\s\S]*?(?=\n\n|$)/, `## Test URLs\n${testUrlsSection}`);
              } else {
                // Add Test URLs section at the end
                newDescription = `${pullRequest.body}\n\n## Test URLs\n${testUrlsSection}`;
              }
              
              console.log('New PR description:', newDescription);
              
              // Update PR description
              await github.rest.pulls.update({
                owner,
                repo,
                pull_number: prNumber,
                body: newDescription,
              });
              
              console.log('Successfully updated PR description');
            } catch (error) {
              console.log('Error updating PR description:', error.message);
              console.log('Error details:', error);
              // Don't fail the workflow if we can't update the PR
              process.exit(0);
            }
        env:
          TEST_URLS: ${{ steps.test-urls.outputs.test_urls }} 
